{"ast":null,"code":"import { map, of } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { UserParams } from '../_models/userParams';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./account.service\";\nexport class MembersService {\n  constructor(http, accountService) {\n    this.http = http;\n    this.accountService = accountService;\n    this.baseUrl = environment.apiUrl;\n    this.members = [];\n    this.memberCache = new Map();\n    this.userParams = new UserParams();\n    this.accountService.currentUser$.subscribe({\n      next: user => {\n        if (user) {\n          this.userParams = new UserParams(user);\n          this.user = user;\n        }\n      }\n    });\n  }\n  getUserParams() {\n    return this.userParams;\n  }\n  setUserParams(params) {\n    this.userParams = params;\n  }\n  resetUserParams() {\n    if (this.user) {\n      this.userParams = new UserParams(this.user);\n      return this.userParams;\n    }\n    return;\n  }\n  getMembers(userParams) {\n    const key = Object.values(userParams).join('-');\n    const response = this.memberCache.get(key);\n    if (response) return of(response);\n    let params = getPaginationHeaders(userParams.pageNumber, userParams.pageSize);\n    params = params.append('orderBy', userParams.orderBy);\n    return getPaginatedResult(this.baseUrl + 'users', params, this.http).pipe(map(response => {\n      this.memberCache.set(key, response);\n      return response;\n    }));\n  }\n  getMember(username) {\n    //const member = this.members.find((x) => x.userName === username);\n    const member = [...this.memberCache.values()].reduce((arr, elem) => arr.concat(elem.result), []).find(x => x.userName === username);\n    if (member) return of(member);\n    return this.http.get(this.baseUrl + 'users/' + username);\n  }\n  updateMember(member) {\n    return this.http.put(this.baseUrl + 'users', member).pipe(map(() => {\n      const index = this.members.indexOf(member);\n      this.members[index] = {\n        ...this.members[index],\n        ...member\n      };\n    }));\n  }\n}\nMembersService.ɵfac = function MembersService_Factory(t) {\n  return new (t || MembersService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AccountService));\n};\nMembersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MembersService,\n  factory: MembersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,GAAG,EAAEC,EAAE,QAAc,MAAM;AACpC,SAASC,WAAW,QAAQ,8BAA8B;AAI1D,SAASC,UAAU,QAAQ,uBAAuB;AAElD,SAASC,kBAAkB,EAAEC,oBAAoB,QAAQ,oBAAoB;;;;AAK7E,OAAM,MAAOC,cAAc;EAOzBC,YACUC,IAAgB,EAChBC,cAA8B;IAD9B,SAAI,GAAJD,IAAI;IACJ,mBAAc,GAAdC,cAAc;IARxB,YAAO,GAAGP,WAAW,CAACQ,MAAM;IAC5B,YAAO,GAAa,EAAE;IACtB,gBAAW,GAAG,IAAIC,GAAG,EAAE;IAEvB,eAAU,GAA2B,IAAIR,UAAU,EAAE;IAMnD,IAAI,CAACM,cAAc,CAACG,YAAY,CAACC,SAAS,CAAC;MACzCC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAIA,IAAI,EAAE;UACR,IAAI,CAACC,UAAU,GAAG,IAAIb,UAAU,CAACY,IAAI,CAAC;UACtC,IAAI,CAACA,IAAI,GAAGA,IAAI;;MAEpB;KACD,CAAC;EACJ;EAEAE,aAAa;IACX,OAAO,IAAI,CAACD,UAAU;EACxB;EAEAE,aAAa,CAACC,MAAkB;IAC9B,IAAI,CAACH,UAAU,GAAGG,MAAM;EAC1B;EAEAC,eAAe;IACb,IAAI,IAAI,CAACL,IAAI,EAAE;MACb,IAAI,CAACC,UAAU,GAAG,IAAIb,UAAU,CAAC,IAAI,CAACY,IAAI,CAAC;MAC3C,OAAO,IAAI,CAACC,UAAU;;IAExB;EACF;EAEAK,UAAU,CAACL,UAAsB;IAC/B,MAAMM,GAAG,GAAGC,MAAM,CAACC,MAAM,CAACR,UAAU,CAAC,CAACS,IAAI,CAAC,GAAG,CAAC;IAC/C,MAAMC,QAAQ,GAAG,IAAI,CAACC,WAAW,CAACC,GAAG,CAACN,GAAG,CAAC;IAC1C,IAAII,QAAQ,EAAE,OAAOzB,EAAE,CAACyB,QAAQ,CAAC;IAEjC,IAAIP,MAAM,GAAGd,oBAAoB,CAC/BW,UAAU,CAACa,UAAU,EACrBb,UAAU,CAACc,QAAQ,CACpB;IACDX,MAAM,GAAGA,MAAM,CAACY,MAAM,CAAC,SAAS,EAAEf,UAAU,CAACgB,OAAO,CAAC;IACrD,OAAO5B,kBAAkB,CACvB,IAAI,CAAC6B,OAAO,GAAG,OAAO,EACtBd,MAAM,EACN,IAAI,CAACX,IAAI,CACV,CAAC0B,IAAI,CACJlC,GAAG,CAAE0B,QAAQ,IAAI;MACf,IAAI,CAACC,WAAW,CAACQ,GAAG,CAACb,GAAG,EAAEI,QAAQ,CAAC;MACnC,OAAOA,QAAQ;IACjB,CAAC,CAAC,CACH;EACH;EAEAU,SAAS,CAACC,QAAgB;IACxB;IACA,MAAMC,MAAM,GAAG,CAAC,GAAG,IAAI,CAACX,WAAW,CAACH,MAAM,EAAE,CAAC,CAC1Ce,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,CAACE,MAAM,CAACD,IAAI,CAACE,MAAM,CAAC,EAAE,EAAE,CAAC,CAClDC,IAAI,CAAEC,CAAM,IAAKA,CAAC,CAACC,QAAQ,KAAKT,QAAQ,CAAC;IAC5C,IAAIC,MAAM,EAAE,OAAOrC,EAAE,CAACqC,MAAM,CAAC;IAC7B,OAAO,IAAI,CAAC9B,IAAI,CAACoB,GAAG,CAAS,IAAI,CAACK,OAAO,GAAG,QAAQ,GAAGI,QAAQ,CAAC;EAClE;EAEAU,YAAY,CAACT,MAAc;IACzB,OAAO,IAAI,CAAC9B,IAAI,CAACwC,GAAG,CAAC,IAAI,CAACf,OAAO,GAAG,OAAO,EAAEK,MAAM,CAAC,CAACJ,IAAI,CACvDlC,GAAG,CAAC,MAAK;MACP,MAAMiD,KAAK,GAAG,IAAI,CAACC,OAAO,CAACC,OAAO,CAACb,MAAM,CAAC;MAC1C,IAAI,CAACY,OAAO,CAACD,KAAK,CAAC,GAAG;QAAE,GAAG,IAAI,CAACC,OAAO,CAACD,KAAK,CAAC;QAAE,GAAGX;MAAM,CAAE;IAC7D,CAAC,CAAC,CACH;EACH;;AA3EWhC,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAA8C,SAAd9C,cAAc;EAAA+C,YAFb;AAAM","names":["map","of","environment","UserParams","getPaginatedResult","getPaginationHeaders","MembersService","constructor","http","accountService","apiUrl","Map","currentUser$","subscribe","next","user","userParams","getUserParams","setUserParams","params","resetUserParams","getMembers","key","Object","values","join","response","memberCache","get","pageNumber","pageSize","append","orderBy","baseUrl","pipe","set","getMember","username","member","reduce","arr","elem","concat","result","find","x","userName","updateMember","put","index","members","indexOf","factory","providedIn"],"sourceRoot":"","sources":["D:\\Harry\\NetCore\\DACCodingAssignment\\DACCodingAssignment\\clientfront\\src\\app\\_services\\members.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, of, take } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Member } from '../_models/member';\nimport { PaginatedResult } from '../_models/pagination';\nimport { User } from '../_models/user';\nimport { UserParams } from '../_models/userParams';\nimport { AccountService } from './account.service';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MembersService {\n  baseUrl = environment.apiUrl;\n  members: Member[] = [];\n  memberCache = new Map();\n  user: User | undefined;\n  userParams: UserParams | undefined = new UserParams();\n\n  constructor(\n    private http: HttpClient,\n    private accountService: AccountService\n  ) {\n    this.accountService.currentUser$.subscribe({\n      next: (user) => {\n        if (user) {\n          this.userParams = new UserParams(user);\n          this.user = user;\n        }\n      },\n    });\n  }\n\n  getUserParams() {\n    return this.userParams;\n  }\n\n  setUserParams(params: UserParams) {\n    this.userParams = params;\n  }\n\n  resetUserParams() {\n    if (this.user) {\n      this.userParams = new UserParams(this.user);\n      return this.userParams;\n    }\n    return;\n  }\n\n  getMembers(userParams: UserParams) {\n    const key = Object.values(userParams).join('-');\n    const response = this.memberCache.get(key);\n    if (response) return of(response);\n\n    let params = getPaginationHeaders(\n      userParams.pageNumber,\n      userParams.pageSize\n    );\n    params = params.append('orderBy', userParams.orderBy);\n    return getPaginatedResult<Member[]>(\n      this.baseUrl + 'users',\n      params,\n      this.http\n    ).pipe(\n      map((response) => {\n        this.memberCache.set(key, response);\n        return response;\n      })\n    );\n  }\n\n  getMember(username: string) {\n    //const member = this.members.find((x) => x.userName === username);\n    const member = [...this.memberCache.values()]\n      .reduce((arr, elem) => arr.concat(elem.result), [])\n      .find((x: any) => x.userName === username);\n    if (member) return of(member);\n    return this.http.get<Member>(this.baseUrl + 'users/' + username);\n  }\n\n  updateMember(member: Member) {\n    return this.http.put(this.baseUrl + 'users', member).pipe(\n      map(() => {\n        const index = this.members.indexOf(member);\n        this.members[index] = { ...this.members[index], ...member };\n      })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}