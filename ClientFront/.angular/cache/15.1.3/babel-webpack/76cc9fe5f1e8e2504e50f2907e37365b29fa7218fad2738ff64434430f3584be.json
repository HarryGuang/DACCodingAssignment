{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nlet RegisterComponent = class RegisterComponent {\n  constructor(accountService, membersService, toastr, fb, router) {\n    this.accountService = accountService;\n    this.membersService = membersService;\n    this.toastr = toastr;\n    this.fb = fb;\n    this.router = router;\n    this.cancelRegister = new EventEmitter();\n    this.registerForm = new FormGroup({});\n  }\n  ngOnInit() {\n    this.initializeForm();\n  }\n  initializeForm() {\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      displayName: ['', Validators.required],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', [Validators.required, this.matchValues('password')]]\n    });\n    this.registerForm.controls['password'].valueChanges.subscribe({\n      next: () => this.registerForm.controls['confirmPassword'].updateValueAndValidity()\n    });\n  }\n  matchValues(matchTo) {\n    return control => {\n      return control.value === control.parent?.get(matchTo)?.value ? null : {\n        notMatching: true\n      };\n    };\n  }\n  register() {\n    const values = this.registerForm.value;\n    //console.log(values);\n    this.accountService.register(values).subscribe({\n      next: response => {\n        this.router.navigateByUrl('/members');\n        //console.log(response);\n      },\n\n      error: error => {\n        this.validationErrors = error;\n        console.log(error);\n      }\n    });\n  }\n  cancel() {\n    //console.log('cancelled');\n    this.cancelRegister.emit(false);\n  }\n};\n__decorate([Output()], RegisterComponent.prototype, \"cancelRegister\", void 0);\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAASC,MAAM,EAAEC,YAAY,QAAgB,eAAe;AAC9E,SAIEC,SAAS,EAETC,UAAU,QACL,gBAAgB;AAUhB,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAM5BC,YACUC,cAA8B,EAC9BC,cAA8B,EAC9BC,MAAqB,EACrBC,EAAe,EACfC,MAAc;IAJd,mBAAc,GAAdJ,cAAc;IACd,mBAAc,GAAdC,cAAc;IACd,WAAM,GAANC,MAAM;IACN,OAAE,GAAFC,EAAE;IACF,WAAM,GAANC,MAAM;IAVN,mBAAc,GAAG,IAAIT,YAAY,EAAE;IAC7C,iBAAY,GAAc,IAAIC,SAAS,CAAC,EAAE,CAAC;EAUxC;EAEHS,QAAQ;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAc;IACZ,IAAI,CAACC,YAAY,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAChCC,MAAM,EAAE,CAAC,MAAM,CAAC;MAChBC,QAAQ,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACc,QAAQ,CAAC;MACnCC,WAAW,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACc,QAAQ,CAAC;MACtCE,SAAS,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACc,QAAQ,CAAC;MACpCG,QAAQ,EAAE,CAAC,EAAE,EAAEjB,UAAU,CAACc,QAAQ,CAAC;MACnCI,QAAQ,EAAE,CACR,EAAE,EACF,CAAClB,UAAU,CAACc,QAAQ,EAAEd,UAAU,CAACmB,SAAS,CAAC,CAAC,CAAC,EAAEnB,UAAU,CAACoB,SAAS,CAAC,CAAC,CAAC,CAAC,CACxE;MACDC,eAAe,EAAE,CACf,EAAE,EACF,CAACrB,UAAU,CAACc,QAAQ,EAAE,IAAI,CAACQ,WAAW,CAAC,UAAU,CAAC,CAAC;KAEtD,CAAC;IACF,IAAI,CAACZ,YAAY,CAACa,QAAQ,CAAC,UAAU,CAAC,CAACC,YAAY,CAACC,SAAS,CAAC;MAC5DC,IAAI,EAAE,MACJ,IAAI,CAAChB,YAAY,CAACa,QAAQ,CAAC,iBAAiB,CAAC,CAACI,sBAAsB;KACvE,CAAC;EACJ;EAEAL,WAAW,CAACM,OAAe;IACzB,OAAQC,OAAwB,IAAI;MAClC,OAAOA,OAAO,CAACC,KAAK,KAAKD,OAAO,CAACE,MAAM,EAAEC,GAAG,CAACJ,OAAO,CAAC,EAAEE,KAAK,GACxD,IAAI,GACJ;QAAEG,WAAW,EAAE;MAAI,CAAE;IAC3B,CAAC;EACH;EAEAC,QAAQ;IACN,MAAMC,MAAM,GAAG,IAAI,CAACzB,YAAY,CAACoB,KAAK;IACtC;IAEA,IAAI,CAAC3B,cAAc,CAAC+B,QAAQ,CAACC,MAAM,CAAC,CAACV,SAAS,CAAC;MAC7CC,IAAI,EAAGU,QAAQ,IAAI;QACjB,IAAI,CAAC7B,MAAM,CAAC8B,aAAa,CAAC,UAAU,CAAC;QACrC;MACF,CAAC;;MACDC,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACC,gBAAgB,GAAGD,KAAK;QAC7BE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MACpB;KACD,CAAC;EACJ;EAEAI,MAAM;IACJ;IACA,IAAI,CAACC,cAAc,CAACC,IAAI,CAAC,KAAK,CAAC;EACjC;CACD;AAnEWC,YAAThD,MAAM,EAAE,yDAAqC;AADnCI,iBAAiB,eAL7BL,SAAS,CAAC;EACTkD,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACW/C,iBAAiB,CAoE7B;SApEYA,iBAAiB","names":["Component","Output","EventEmitter","FormGroup","Validators","RegisterComponent","constructor","accountService","membersService","toastr","fb","router","ngOnInit","initializeForm","registerForm","group","gender","username","required","displayName","firstName","lastName","password","minLength","maxLength","confirmPassword","matchValues","controls","valueChanges","subscribe","next","updateValueAndValidity","matchTo","control","value","parent","get","notMatching","register","values","response","navigateByUrl","error","validationErrors","console","log","cancel","cancelRegister","emit","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Harry\\NetCore\\DACCodingAssignment\\DACCodingAssignment\\clientfront\\src\\app\\register\\register.component.ts"],"sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  registerForm: FormGroup = new FormGroup({});\n  //validationErrors: string[] | undefined;\n  validationErrors: any[] | undefined;\n\n  constructor(\n    private accountService: AccountService,\n    private membersService: MembersService,\n    private toastr: ToastrService,\n    private fb: FormBuilder,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.initializeForm();\n  }\n\n  initializeForm() {\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      displayName: ['', Validators.required],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      password: [\n        '',\n        [Validators.required, Validators.minLength(4), Validators.maxLength(8)],\n      ],\n      confirmPassword: [\n        '',\n        [Validators.required, this.matchValues('password')],\n      ],\n    });\n    this.registerForm.controls['password'].valueChanges.subscribe({\n      next: () =>\n        this.registerForm.controls['confirmPassword'].updateValueAndValidity(),\n    });\n  }\n\n  matchValues(matchTo: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      return control.value === control.parent?.get(matchTo)?.value\n        ? null\n        : { notMatching: true };\n    };\n  }\n\n  register() {\n    const values = this.registerForm.value;\n    //console.log(values);\n\n    this.accountService.register(values).subscribe({\n      next: (response) => {\n        this.router.navigateByUrl('/members');\n        //console.log(response);\n      },\n      error: (error) => {\n        this.validationErrors = error;\n        console.log(error);\n      },\n    });\n  }\n\n  cancel() {\n    //console.log('cancelled');\n    this.cancelRegister.emit(false);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}