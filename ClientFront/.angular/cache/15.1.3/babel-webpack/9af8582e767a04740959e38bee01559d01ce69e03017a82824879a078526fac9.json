{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet MemberListComponent = class MemberListComponent {\n  constructor(accountService, membersService) {\n    this.accountService = accountService;\n    this.membersService = membersService;\n    this.members = [];\n    this.genderList = [{\n      value: 'male',\n      display: 'Males'\n    }, {\n      value: 'female',\n      display: 'Females'\n    }];\n    this.canEditDelete = true;\n    this.userParams = this.membersService.getUserParams();\n    console.log(this.userParams);\n  }\n  ngOnInit() {\n    this.loadMembers();\n    this.accountService.currentUser$.pipe(map(user => {\n      if (!user) return false;\n      if (user.roles.includes('Admin') || user.roles.includes('Moderator')) {\n        return true;\n      } else {\n        this.toastr.error('You cannot enter this arae');\n        return false;\n      }\n    }));\n  }\n  loadMembers() {\n    //console.log(this.userParams);\n    if (this.userParams) {\n      this.membersService.setUserParams(this.userParams);\n      this.membersService.getMembers(this.userParams).subscribe({\n        next: Response => {\n          if (Response.result && Response.pagination) {\n            this.members = Response.result;\n            this.pagination = Response.pagination;\n          }\n        }\n      });\n    }\n  }\n  resetFilters() {\n    this.userParams = this.membersService.resetUserParams();\n    this.loadMembers();\n  }\n  pageChanged(event) {\n    if (this.userParams && this.userParams?.pageNumber !== event.page) {\n      this.userParams.pageNumber = event.page;\n      this.membersService.setUserParams(this.userParams);\n      this.loadMembers();\n    }\n  }\n};\nMemberListComponent = __decorate([Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})], MemberListComponent);\nexport { MemberListComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAY1C,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAU9BC,YACUC,cAA8B,EAC9BC,cAA8B;IAD9B,mBAAc,GAAdD,cAAc;IACd,mBAAc,GAAdC,cAAc;IAXxB,YAAO,GAAa,EAAE;IAGtB,eAAU,GAAG,CACX;MAAEC,KAAK,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAO,CAAE,EACnC;MAAED,KAAK,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAS,CAAE,CACxC;IACD,kBAAa,GAAG,IAAI;IAKlB,IAAI,CAACC,UAAU,GAAG,IAAI,CAACH,cAAc,CAACI,aAAa,EAAE;IACrDC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,UAAU,CAAC;EAC9B;EAEAI,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;IAEtB,IAAI,CAACT,cAAc,CAACU,YAAY,CAACC,IAAI,CACnCC,GAAG,CAAEC,IAAI,IAAI;MACX,IAAI,CAACA,IAAI,EAAE,OAAO,KAAK;MACvB,IAAIA,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC,OAAO,CAAC,IAAIF,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;QACpE,OAAO,IAAI;OACZ,MAAM;QACL,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC,4BAA4B,CAAC;QAC/C,OAAO,KAAK;;IAEhB,CAAC,CAAC,CACH;EACC;EAEAR,WAAW;IACT;IACA,IAAI,IAAI,CAACL,UAAU,EAAE;MACnB,IAAI,CAACH,cAAc,CAACiB,aAAa,CAAC,IAAI,CAACd,UAAU,CAAC;MAClD,IAAI,CAACH,cAAc,CAACkB,UAAU,CAAC,IAAI,CAACf,UAAU,CAAC,CAACgB,SAAS,CAAC;QACxDC,IAAI,EAAGC,QAAQ,IAAI;UACjB,IAAIA,QAAQ,CAACC,MAAM,IAAID,QAAQ,CAACE,UAAU,EAAE;YAC1C,IAAI,CAACC,OAAO,GAAGH,QAAQ,CAACC,MAAM;YAC9B,IAAI,CAACC,UAAU,GAAGF,QAAQ,CAACE,UAAU;;QAEzC;OACD,CAAC;;EAEN;EAEAE,YAAY;IACV,IAAI,CAACtB,UAAU,GAAG,IAAI,CAACH,cAAc,CAAC0B,eAAe,EAAE;IACvD,IAAI,CAAClB,WAAW,EAAE;EACpB;EAEAmB,WAAW,CAACC,KAAU;IACpB,IAAI,IAAI,CAACzB,UAAU,IAAI,IAAI,CAACA,UAAU,EAAE0B,UAAU,KAAKD,KAAK,CAACE,IAAI,EAAE;MACjE,IAAI,CAAC3B,UAAU,CAAC0B,UAAU,GAAGD,KAAK,CAACE,IAAI;MACvC,IAAI,CAAC9B,cAAc,CAACiB,aAAa,CAAC,IAAI,CAACd,UAAU,CAAC;MAClD,IAAI,CAACK,WAAW,EAAE;;EAEtB;CACD;AA5DYX,mBAAmB,eAL/BD,SAAS,CAAC;EACTmC,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,GACWpC,mBAAmB,CA4D/B;SA5DYA,mBAAmB","names":["Component","MemberListComponent","constructor","accountService","membersService","value","display","userParams","getUserParams","console","log","ngOnInit","loadMembers","currentUser$","pipe","map","user","roles","includes","toastr","error","setUserParams","getMembers","subscribe","next","Response","result","pagination","members","resetFilters","resetUserParams","pageChanged","event","pageNumber","page","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Harry\\NetCore\\DACCodingAssignment\\DACCodingAssignment\\clientfront\\src\\app\\members\\member-list\\member-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Member } from 'src/app/_models/member';\nimport { Pagination } from 'src/app/_models/pagination';\nimport { UserParams } from 'src/app/_models/userParams';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { AccountService } from './account.service';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css'],\n})\nexport class MemberListComponent implements OnInit {\n  members: Member[] = [];\n  pagination: Pagination | undefined;\n  userParams: UserParams | undefined;\n  genderList = [\n    { value: 'male', display: 'Males' },\n    { value: 'female', display: 'Females' },\n  ];\n  canEditDelete = true;\n\n  constructor(\n    private accountService: AccountService,\n    private membersService: MembersService) {\n    this.userParams = this.membersService.getUserParams();\n    console.log(this.userParams);\n  }\n\n  ngOnInit(): void {\n    this.loadMembers();\n\nthis.accountService.currentUser$.pipe(\n  map((user) => {\n    if (!user) return false;\n    if (user.roles.includes('Admin') || user.roles.includes('Moderator')) {\n      return true;\n    } else {\n      this.toastr.error('You cannot enter this arae');\n      return false;\n    }\n  })\n);\n  }\n\n  loadMembers() {\n    //console.log(this.userParams);\n    if (this.userParams) {\n      this.membersService.setUserParams(this.userParams);\n      this.membersService.getMembers(this.userParams).subscribe({\n        next: (Response) => {\n          if (Response.result && Response.pagination) {\n            this.members = Response.result;\n            this.pagination = Response.pagination;\n          }\n        },\n      });\n    }\n  }\n\n  resetFilters() {\n    this.userParams = this.membersService.resetUserParams();\n    this.loadMembers();\n  }\n\n  pageChanged(event: any) {\n    if (this.userParams && this.userParams?.pageNumber !== event.page) {\n      this.userParams.pageNumber = event.page;\n      this.membersService.setUserParams(this.userParams);\n      this.loadMembers();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}