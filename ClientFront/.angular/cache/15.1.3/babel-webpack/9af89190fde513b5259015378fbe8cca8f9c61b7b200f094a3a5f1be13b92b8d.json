{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nlet UsereditModalComponent = class UsereditModalComponent {\n  constructor(membersService, bsModalRef, fb, router) {\n    this.membersService = membersService;\n    this.bsModalRef = bsModalRef;\n    this.fb = fb;\n    this.router = router;\n    this.userid = 0;\n    this.username = '';\n    this.displayName = '';\n    this.firstName = '';\n    this.lastName = '';\n    this.gender = '';\n    this.closeBtnName = '';\n    this.userEditForm = new FormGroup({});\n    this.genderList = [{\n      value: 'male',\n      display: 'Males'\n    }, {\n      value: 'female',\n      display: 'Females'\n    }];\n  }\n  ngOnInit() {\n    this.initializeForm();\n  }\n  initializeForm() {\n    this.userEditForm = this.fb.group({\n      user,\n      gender: [this.gender],\n      username: [this.username, Validators.required],\n      displayName: [this.displayName, Validators.required],\n      firstName: [this.firstName, Validators.required],\n      lastName: [this.lastName, Validators.required]\n    });\n  }\n  matchValues(matchTo) {\n    return control => {\n      return control.value === control.parent?.get(matchTo)?.value ? null : {\n        notMatching: true\n      };\n    };\n  }\n  updateMember(userid) {\n    const values = this.userEditForm.value;\n    console.log(values);\n    this.membersService.updateMember(userid, values).subscribe({\n      next: response => {\n        console.log(response);\n        return;\n        this.membersService.memberCache = new Map();\n        this.bsModalRef.hide();\n        this.router.navigateByUrl('/members');\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n};\nUsereditModalComponent = __decorate([Component({\n  selector: 'app-useredit-modal',\n  templateUrl: './useredit-modal.component.html',\n  styleUrls: ['./useredit-modal.component.css']\n})], UsereditModalComponent);\nexport { UsereditModalComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAIjD,SAIEC,SAAS,EAETC,UAAU,QACL,gBAAgB;AAOhB,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAgBjCC,YACUC,cAA8B,EAC/BC,UAAsB,EACrBC,EAAe,EACfC,MAAc;IAHd,mBAAc,GAAdH,cAAc;IACf,eAAU,GAAVC,UAAU;IACT,OAAE,GAAFC,EAAE;IACF,WAAM,GAANC,MAAM;IAnBhB,WAAM,GAAG,CAAC;IACV,aAAQ,GAAG,EAAE;IACb,gBAAW,GAAG,EAAE;IAChB,cAAS,GAAG,EAAE;IACd,aAAQ,GAAG,EAAE;IACb,WAAM,GAAG,EAAE;IACX,iBAAY,GAAG,EAAE;IAEjB,iBAAY,GAAc,IAAIP,SAAS,CAAC,EAAE,CAAC;IAE3C,eAAU,GAAG,CACX;MAAEQ,KAAK,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAO,CAAE,EACnC;MAAED,KAAK,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAS,CAAE,CACxC;EAOE;EAEHC,QAAQ;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAc;IACZ,IAAI,CAACC,YAAY,GAAG,IAAI,CAACN,EAAE,CAACO,KAAK,CAAC;MAChCC,IAAI;MACJC,MAAM,EAAE,CAAC,IAAI,CAACA,MAAM,CAAC;MACrBC,QAAQ,EAAE,CAAC,IAAI,CAACA,QAAQ,EAAEf,UAAU,CAACgB,QAAQ,CAAC;MAC9CC,WAAW,EAAE,CAAC,IAAI,CAACA,WAAW,EAAEjB,UAAU,CAACgB,QAAQ,CAAC;MACpDE,SAAS,EAAE,CAAC,IAAI,CAACA,SAAS,EAAElB,UAAU,CAACgB,QAAQ,CAAC;MAChDG,QAAQ,EAAE,CAAC,IAAI,CAACA,QAAQ,EAAEnB,UAAU,CAACgB,QAAQ;KAC9C,CAAC;EACJ;EAEAI,WAAW,CAACC,OAAe;IACzB,OAAQC,OAAwB,IAAI;MAClC,OAAOA,OAAO,CAACf,KAAK,KAAKe,OAAO,CAACC,MAAM,EAAEC,GAAG,CAACH,OAAO,CAAC,EAAEd,KAAK,GACxD,IAAI,GACJ;QAAEkB,WAAW,EAAE;MAAI,CAAE;IAC3B,CAAC;EACH;EAEAC,YAAY,CAACC,MAAc;IACzB,MAAMC,MAAM,GAAG,IAAI,CAACjB,YAAY,CAACJ,KAAK;IACtCsB,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IAEnB,IAAI,CAACzB,cAAc,CAACuB,YAAY,CAACC,MAAM,EAAEC,MAAM,CAAC,CAACG,SAAS,CAAC;MACzDC,IAAI,EAAGC,QAAQ,IAAI;QACjBJ,OAAO,CAACC,GAAG,CAACG,QAAQ,CAAC;QACrB;QAEA,IAAI,CAAC9B,cAAc,CAAC+B,WAAW,GAAG,IAAIC,GAAG,EAAE;QAC3C,IAAI,CAAC/B,UAAU,CAACgC,IAAI,EAAE;QAEtB,IAAI,CAAC9B,MAAM,CAAC+B,aAAa,CAAC,UAAU,CAAC;MACvC,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACfT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;MACpB;KACD,CAAC;EACJ;CACD;AAjEYrC,sBAAsB,eALlCH,SAAS,CAAC;EACTyC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,GACWxC,sBAAsB,CAiElC;SAjEYA,sBAAsB","names":["Component","FormGroup","Validators","UsereditModalComponent","constructor","membersService","bsModalRef","fb","router","value","display","ngOnInit","initializeForm","userEditForm","group","user","gender","username","required","displayName","firstName","lastName","matchValues","matchTo","control","parent","get","notMatching","updateMember","userid","values","console","log","subscribe","next","response","memberCache","Map","hide","navigateByUrl","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Harry\\NetCore\\DACCodingAssignment\\DACCodingAssignment\\clientfront\\src\\app\\modals\\useredit-modal\\useredit-modal.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Router } from '@angular/router';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-useredit-modal',\n  templateUrl: './useredit-modal.component.html',\n  styleUrls: ['./useredit-modal.component.css'],\n})\nexport class UsereditModalComponent implements OnInit {\n  userid = 0;\n  username = '';\n  displayName = '';\n  firstName = '';\n  lastName = '';\n  gender = '';\n  closeBtnName = '';\n\n  userEditForm: FormGroup = new FormGroup({});\n\n  genderList = [\n    { value: 'male', display: 'Males' },\n    { value: 'female', display: 'Females' },\n  ];\n\n  constructor(\n    private membersService: MembersService,\n    public bsModalRef: BsModalRef,\n    private fb: FormBuilder,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.initializeForm();\n  }\n\n  initializeForm() {\n    this.userEditForm = this.fb.group({\n      user\n      gender: [this.gender],\n      username: [this.username, Validators.required],\n      displayName: [this.displayName, Validators.required],\n      firstName: [this.firstName, Validators.required],\n      lastName: [this.lastName, Validators.required],\n    });\n  }\n\n  matchValues(matchTo: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      return control.value === control.parent?.get(matchTo)?.value\n        ? null\n        : { notMatching: true };\n    };\n  }\n\n  updateMember(userid: number) {\n    const values = this.userEditForm.value;\n    console.log(values);\n\n    this.membersService.updateMember(userid, values).subscribe({\n      next: (response) => {\n        console.log(response);\n        return;\n\n        this.membersService.memberCache = new Map();\n        this.bsModalRef.hide();\n\n        this.router.navigateByUrl('/members');\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}