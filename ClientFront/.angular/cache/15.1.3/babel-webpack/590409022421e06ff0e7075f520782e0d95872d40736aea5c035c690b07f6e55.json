{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-bootstrap/modal\";\nimport * as i2 from \"@angular/forms\";\nexport class UsereditModalComponent {\n  constructor(bsModalRef, fb) {\n    this.bsModalRef = bsModalRef;\n    this.fb = fb;\n    this.username = '';\n    this.displayName = '';\n    this.firstName = '';\n    this.lastName = '';\n    this.gender = '';\n    this.closeBtnName = '';\n    this.userEditForm = new FormGroup({});\n    this.genderList = [{\n      value: 'male',\n      display: 'Males'\n    }, {\n      value: 'female',\n      display: 'Females'\n    }];\n  }\n  ngOnInit() {}\n  initializeForm() {\n    this.userEditForm = this.fb.group({\n      gender: [this.gender],\n      username: [this.us, Validators.required],\n      displayName: ['', Validators.required],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', [Validators.required, this.matchValues('password')]]\n    });\n    this.registerForm.controls['password'].valueChanges.subscribe({\n      next: () => this.registerForm.controls['confirmPassword'].updateValueAndValidity()\n    });\n  }\n}\nUsereditModalComponent.ɵfac = function UsereditModalComponent_Factory(t) {\n  return new (t || UsereditModalComponent)(i0.ɵɵdirectiveInject(i1.BsModalRef), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nUsereditModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UsereditModalComponent,\n  selectors: [[\"app-useredit-modal\"]],\n  decls: 18,\n  vars: 3,\n  consts: [[1, \"modal-header\"], [1, \"modal-title\", \"pull-left\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"btn-close\", \"close\", \"pull-right\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"visually-hidden\"], [1, \"modal-body\"], [3, \"formGroup\"], [1, \"mb-3\"], [1, \"form-check-label\"], [\"type\", \"radio\", \"value\", \"male\", \"formControlName\", \"gender\", 1, \"form-check-input\"], [\"type\", \"radio\", \"value\", \"female\", \"formControlName\", \"gender\", 1, \"form-check-input\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", 3, \"click\"]],\n  template: function UsereditModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function UsereditModalComponent_Template_button_click_3_listener() {\n        return ctx.bsModalRef.hide();\n      });\n      i0.ɵɵelementStart(4, \"span\", 3);\n      i0.ɵɵtext(5, \"\\u00D7\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"form\", 5)(8, \"div\", 6)(9, \"label\", 7);\n      i0.ɵɵelement(10, \"input\", 8);\n      i0.ɵɵtext(11, \" Male \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"label\", 7);\n      i0.ɵɵelement(13, \"input\", 9);\n      i0.ɵɵtext(14, \" Female \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(15, \"div\", 10)(16, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function UsereditModalComponent_Template_button_click_16_listener() {\n        return ctx.bsModalRef.hide();\n      });\n      i0.ɵɵtext(17);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Edit User - \", ctx.username, \"\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.userEditForm);\n      i0.ɵɵadvance(10);\n      i0.ɵɵtextInterpolate(ctx.closeBtnName);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.RadioControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAIEA,SAAS,EAETC,UAAU,QACL,gBAAgB;;;;AAOvB,OAAM,MAAOC,sBAAsB;EAejCC,YAAmBC,UAAsB,EAC/BC,EAAe;IADN,eAAU,GAAVD,UAAU;IACnB,OAAE,GAAFC,EAAE;IAfZ,aAAQ,GAAG,EAAE;IACb,gBAAW,GAAG,EAAE;IAChB,cAAS,GAAG,EAAE;IACd,aAAQ,GAAG,EAAE;IACb,WAAM,GAAG,EAAE;IACX,iBAAY,GAAG,EAAE;IAEjB,iBAAY,GAAc,IAAIL,SAAS,CAAC,EAAE,CAAC;IAE3C,eAAU,GAAG,CACX;MAAEM,KAAK,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAO,CAAE,EACnC;MAAED,KAAK,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAS,CAAE,CACxC;EAG4B;EAE7BC,QAAQ,IAAU;EAElBC,cAAc;IACZ,IAAI,CAACC,YAAY,GAAG,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MAChCC,MAAM,EAAE,CAAC,IAAI,CAACA,MAAM,CAAC;MACrBC,QAAQ,EAAE,CAAC,IAAI,CAACC,EAAE,EAAEb,UAAU,CAACc,QAAQ,CAAC;MACxCC,WAAW,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACc,QAAQ,CAAC;MACtCE,SAAS,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACc,QAAQ,CAAC;MACpCG,QAAQ,EAAE,CAAC,EAAE,EAAEjB,UAAU,CAACc,QAAQ,CAAC;MACnCI,QAAQ,EAAE,CACR,EAAE,EACF,CAAClB,UAAU,CAACc,QAAQ,EAAEd,UAAU,CAACmB,SAAS,CAAC,CAAC,CAAC,EAAEnB,UAAU,CAACoB,SAAS,CAAC,CAAC,CAAC,CAAC,CACxE;MACDC,eAAe,EAAE,CACf,EAAE,EACF,CAACrB,UAAU,CAACc,QAAQ,EAAE,IAAI,CAACQ,WAAW,CAAC,UAAU,CAAC,CAAC;KAEtD,CAAC;IACF,IAAI,CAACC,YAAY,CAACC,QAAQ,CAAC,UAAU,CAAC,CAACC,YAAY,CAACC,SAAS,CAAC;MAC5DC,IAAI,EAAE,MACJ,IAAI,CAACJ,YAAY,CAACC,QAAQ,CAAC,iBAAiB,CAAC,CAACI,sBAAsB;KACvE,CAAC;EACJ;;AAxCW3B,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAA4B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MChB/BC,8BAA0B;MACUA,YAAwB;MAAAA,iBAAK;MAC/DA,iCAAwG;MAA5BA;QAAA,OAASC,qBAAiB;MAAA,EAAC;MACrGD,+BAAiD;MAAAA,sBAAO;MAAAA,iBAAO;MAGnEA,8BAAwB;MAIRA,4BAAmF;MAACA,uBACxF;MAAAA,iBAAQ;MACRA,iCAAgC;MAC5BA,4BAAqF;MAACA,yBAC1F;MAAAA,iBAAQ;MAIpBA,gCAA0B;MACsBA;QAAA,OAASC,qBAAiB;MAAA,EAAC;MAACD,aAAgB;MAAAA,iBAAS;;;MAlBjEA,eAAwB;MAAxBA,uDAAwB;MAMlDA,eAA0B;MAA1BA,4CAA0B;MAYwCA,gBAAgB;MAAhBA,sCAAgB","names":["FormGroup","Validators","UsereditModalComponent","constructor","bsModalRef","fb","value","display","ngOnInit","initializeForm","userEditForm","group","gender","username","us","required","displayName","firstName","lastName","password","minLength","maxLength","confirmPassword","matchValues","registerForm","controls","valueChanges","subscribe","next","updateValueAndValidity","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\Harry\\NetCore\\DACCodingAssignment\\DACCodingAssignment\\clientfront\\src\\app\\modals\\useredit-modal\\useredit-modal.component.ts","D:\\Harry\\NetCore\\DACCodingAssignment\\DACCodingAssignment\\clientfront\\src\\app\\modals\\useredit-modal\\useredit-modal.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-useredit-modal',\n  templateUrl: './useredit-modal.component.html',\n  styleUrls: ['./useredit-modal.component.css'],\n})\nexport class UsereditModalComponent implements OnInit {\n  username = '';\n  displayName = '';\n  firstName = '';\n  lastName = '';\n  gender = '';\n  closeBtnName = '';\n\n  userEditForm: FormGroup = new FormGroup({});\n\n  genderList = [\n    { value: 'male', display: 'Males' },\n    { value: 'female', display: 'Females' },\n  ];\n\n  constructor(public bsModalRef: BsModalRef,\n    private fb: FormBuilder,) {}\n\n  ngOnInit(): void {}\n\n  initializeForm() {\n    this.userEditForm = this.fb.group({\n      gender: [this.gender],\n      username: [this.us, Validators.required],\n      displayName: ['', Validators.required],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      password: [\n        '',\n        [Validators.required, Validators.minLength(4), Validators.maxLength(8)],\n      ],\n      confirmPassword: [\n        '',\n        [Validators.required, this.matchValues('password')],\n      ],\n    });\n    this.registerForm.controls['password'].valueChanges.subscribe({\n      next: () =>\n        this.registerForm.controls['confirmPassword'].updateValueAndValidity(),\n    });\n  }\n\n\n}\n","    <div class=\"modal-header\">\n      <h4 class=\"modal-title pull-left\">Edit User - {{username}}</h4>\n      <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n        <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n        <form [formGroup]=\"userEditForm\">\n            <div class=\"mb-3\">\n                <label class=\"form-check-label\">\n                    <input type=\"radio\" class=\"form-check-input\" value=\"male\" formControlName=\"gender\"> Male\n                </label>\n                <label class=\"form-check-label\">\n                    <input type=\"radio\" class=\"form-check-input\" value=\"female\" formControlName=\"gender\"> Female\n                </label>\n            </div>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">{{closeBtnName}}</button>\n    </div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}