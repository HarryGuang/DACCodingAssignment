{"ast":null,"code":"import { Injectable, ɵɵdefineInjectable, forwardRef, EventEmitter, Component, ElementRef, ChangeDetectorRef, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Provides default values for Pagination and pager components\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nconst _c0 = function (a0, a1) {\n  return {\n    \"pull-left\": a0,\n    \"float-left\": a1\n  };\n};\nconst _c1 = function (a0, a1) {\n  return {\n    \"pull-right\": a0,\n    \"float-right\": a1\n  };\n};\nconst _c2 = function (a0, a1) {\n  return {\n    disabled: a0,\n    currentPage: a1\n  };\n};\nfunction PaginationComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 11)(1, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function PaginationComponent_li_1_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      const ctx_r15 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r15.selectPage(1, $event));\n    });\n    ɵngcc0.ɵɵelementContainer(2, 13);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    const _r11 = ɵngcc0.ɵɵreference(13);\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r0.noPrevious() || ctx_r0.disabled);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.customFirstTemplate || _r11)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(4, _c2, ctx_r0.noPrevious() || ctx_r0.disabled, ctx_r0.page));\n  }\n}\nfunction PaginationComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 14)(1, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function PaginationComponent_li_2_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r18);\n      const ctx_r17 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r17.selectPage(ctx_r17.page - 1, $event));\n    });\n    ɵngcc0.ɵɵelementContainer(2, 13);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    const _r9 = ɵngcc0.ɵɵreference(11);\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r1.noPrevious() || ctx_r1.disabled);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.customPreviousTemplate || _r9)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(4, _c2, ctx_r1.noPrevious() || ctx_r1.disabled, ctx_r1.page));\n  }\n}\nconst _c3 = function (a0, a1, a2) {\n  return {\n    disabled: a0,\n    $implicit: a1,\n    currentPage: a2\n  };\n};\nfunction PaginationComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15)(1, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function PaginationComponent_li_3_Template_a_click_1_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r21);\n      const pg_r19 = restoredCtx.$implicit;\n      const ctx_r20 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r20.selectPage(pg_r19.number, $event));\n    });\n    ɵngcc0.ɵɵelementContainer(2, 13);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const pg_r19 = ctx.$implicit;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    const _r5 = ɵngcc0.ɵɵreference(7);\n    ɵngcc0.ɵɵclassProp(\"active\", pg_r19.active)(\"disabled\", ctx_r2.disabled && !pg_r19.active);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.customPageTemplate || _r5)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(6, _c3, ctx_r2.disabled, pg_r19, ctx_r2.page));\n  }\n}\nfunction PaginationComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 16)(1, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function PaginationComponent_li_4_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      const ctx_r22 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r22.selectPage(ctx_r22.page + 1, $event));\n    });\n    ɵngcc0.ɵɵelementContainer(2, 13);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    const _r7 = ɵngcc0.ɵɵreference(9);\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r3.noNext() || ctx_r3.disabled);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.customNextTemplate || _r7)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(4, _c2, ctx_r3.noNext() || ctx_r3.disabled, ctx_r3.page));\n  }\n}\nfunction PaginationComponent_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 17)(1, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function PaginationComponent_li_5_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      const ctx_r24 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r24.selectPage(ctx_r24.totalPages, $event));\n    });\n    ɵngcc0.ɵɵelementContainer(2, 13);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    const _r13 = ɵngcc0.ɵɵreference(15);\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r4.noNext() || ctx_r4.disabled);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.customLastTemplate || _r13)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(4, _c2, ctx_r4.noNext() || ctx_r4.disabled, ctx_r4.page));\n  }\n}\nfunction PaginationComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const page_r26 = ctx.$implicit;\n    ɵngcc0.ɵɵtextInterpolate(page_r26.text);\n  }\n}\nfunction PaginationComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵtextInterpolate(ctx_r8.getText(\"next\"));\n  }\n}\nfunction PaginationComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10.getText(\"previous\"));\n  }\n}\nfunction PaginationComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵtextInterpolate(ctx_r12.getText(\"first\"));\n  }\n}\nfunction PaginationComponent_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r14 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵtextInterpolate(ctx_r14.getText(\"last\"));\n  }\n}\nclass PaginationConfig {\n  constructor() {\n    this.main = {\n      maxSize: void 0,\n      itemsPerPage: 10,\n      boundaryLinks: false,\n      directionLinks: true,\n      firstText: 'First',\n      previousText: 'Previous',\n      nextText: 'Next',\n      lastText: 'Last',\n      pageBtnClass: '',\n      rotate: true\n    };\n    this.pager = {\n      itemsPerPage: 15,\n      previousText: '« Previous',\n      nextText: 'Next »',\n      pageBtnClass: '',\n      align: true\n    };\n  }\n}\nPaginationConfig.ɵfac = function PaginationConfig_Factory(t) {\n  return new (t || PaginationConfig)();\n};\n/** @nocollapse */\nPaginationConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function PaginationConfig_Factory() {\n    return new PaginationConfig();\n  },\n  token: PaginationConfig,\n  providedIn: \"root\"\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PaginationConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nif (false) {\n  /** @type {?} */\n  PaginationConfig.prototype.main;\n  /** @type {?} */\n  PaginationConfig.prototype.pager;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst PAGER_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(\n  /**\n  * @return {?}\n  */\n  () => PagerComponent),\n  multi: true\n};\nclass PagerComponent {\n  /**\n   * @param {?} elementRef\n   * @param {?} paginationConfig\n   * @param {?} changeDetection\n   */\n  constructor(elementRef, paginationConfig, changeDetection) {\n    this.elementRef = elementRef;\n    this.changeDetection = changeDetection;\n    /**\n     * fired when total pages count changes, $event:number equals to total pages count\n     */\n    this.numPages = new EventEmitter();\n    /**\n     * fired when page was changed, $event:{page, itemsPerPage} equals to\n     * object with current page index and number of items per page\n     */\n    this.pageChanged = new EventEmitter();\n    this.onChange = Function.prototype;\n    this.onTouched = Function.prototype;\n    this.inited = false;\n    this._page = 1;\n    this.elementRef = elementRef;\n    if (!this.config) {\n      this.configureOptions(Object.assign({}, paginationConfig.main, paginationConfig.pager));\n    }\n  }\n  /**\n   * maximum number of items per page. If value less than 1 will display all items on one page\n   * @return {?}\n   */\n  get itemsPerPage() {\n    return this._itemsPerPage;\n  }\n  /**\n   * @param {?} v\n   * @return {?}\n   */\n  set itemsPerPage(v) {\n    this._itemsPerPage = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n  /**\n   * total number of items in all pages\n   * @return {?}\n   */\n  get totalItems() {\n    return this._totalItems;\n  }\n  /**\n   * @param {?} v\n   * @return {?}\n   */\n  set totalItems(v) {\n    this._totalItems = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n  /**\n   * @return {?}\n   */\n  get totalPages() {\n    return this._totalPages;\n  }\n  /**\n   * @param {?} v\n   * @return {?}\n   */\n  set totalPages(v) {\n    this._totalPages = v;\n    this.numPages.emit(v);\n    if (this.inited) {\n      this.selectPage(this.page);\n    }\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set page(value) {\n    /** @type {?} */\n    const _previous = this._page;\n    this._page = value > this.totalPages ? this.totalPages : value || 1;\n    this.changeDetection.markForCheck();\n    if (_previous === this._page || typeof _previous === 'undefined') {\n      return;\n    }\n    this.pageChanged.emit({\n      page: this._page,\n      itemsPerPage: this.itemsPerPage\n    });\n  }\n  /**\n   * @return {?}\n   */\n  get page() {\n    return this._page;\n  }\n  /**\n   * @param {?} config\n   * @return {?}\n   */\n  configureOptions(config) {\n    this.config = Object.assign({}, config);\n  }\n  /**\n   * @return {?}\n   */\n  ngOnInit() {\n    if (typeof window !== 'undefined') {\n      this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n    }\n    // watch for maxSize\n    this.maxSize = typeof this.maxSize !== 'undefined' ? this.maxSize : this.config.maxSize;\n    this.rotate = typeof this.rotate !== 'undefined' ? this.rotate : this.config.rotate;\n    this.boundaryLinks = typeof this.boundaryLinks !== 'undefined' ? this.boundaryLinks : this.config.boundaryLinks;\n    this.directionLinks = typeof this.directionLinks !== 'undefined' ? this.directionLinks : this.config.directionLinks;\n    this.pageBtnClass = typeof this.pageBtnClass !== 'undefined' ? this.pageBtnClass : this.config.pageBtnClass;\n    // base class\n    this.itemsPerPage = typeof this.itemsPerPage !== 'undefined' ? this.itemsPerPage : this.config.itemsPerPage;\n    this.totalPages = this.calculateTotalPages();\n    // this class\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.inited = true;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  writeValue(value) {\n    this.page = value;\n    this.pages = this.getPages(this.page, this.totalPages);\n  }\n  /**\n   * @param {?} key\n   * @return {?}\n   */\n  getText(key) {\n    // tslint:disable-next-line:no-any\n    return (/** @type {?} */this[`${key}Text`] || /** @type {?} */this.config[`${key}Text`]\n    );\n  }\n  /**\n   * @return {?}\n   */\n  noPrevious() {\n    return this.page === 1;\n  }\n  /**\n   * @return {?}\n   */\n  noNext() {\n    return this.page === this.totalPages;\n  }\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * @param {?} page\n   * @param {?=} event\n   * @return {?}\n   */\n  selectPage(page, event) {\n    if (event) {\n      event.preventDefault();\n    }\n    if (!this.disabled) {\n      if (event && event.target) {\n        // tslint:disable-next-line:no-any\n        /** @type {?} */\n        const target = event.target;\n        target.blur();\n      }\n      this.writeValue(page);\n      this.onChange(this.page);\n    }\n  }\n  // Create page object used in template\n  /**\n   * @protected\n   * @param {?} num\n   * @param {?} text\n   * @param {?} active\n   * @return {?}\n   */\n  makePage(num, text, active) {\n    return {\n      text,\n      number: num,\n      active\n    };\n  }\n  /**\n   * @protected\n   * @param {?} currentPage\n   * @param {?} totalPages\n   * @return {?}\n   */\n  getPages(currentPage, totalPages) {\n    /** @type {?} */\n    const pages = [];\n    // Default page limits\n    /** @type {?} */\n    let startPage = 1;\n    /** @type {?} */\n    let endPage = totalPages;\n    /** @type {?} */\n    const isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n    // recompute if maxSize\n    if (isMaxSized) {\n      if (this.rotate) {\n        // Current page is displayed in the middle of the visible ones\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n        endPage = startPage + this.maxSize - 1;\n        // Adjust if limit is exceeded\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = endPage - this.maxSize + 1;\n        }\n      } else {\n        // Visible pages are paginated with maxSize\n        startPage = (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n        // Adjust last page if limit is exceeded\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n      }\n    }\n    // Add page number links\n    for (let num = startPage; num <= endPage; num++) {\n      /** @type {?} */\n      const page = this.makePage(num, num.toString(), num === currentPage);\n      pages.push(page);\n    }\n    // Add links to move between page sets\n    if (isMaxSized && !this.rotate) {\n      if (startPage > 1) {\n        /** @type {?} */\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\n        pages.unshift(previousPageSet);\n      }\n      if (endPage < totalPages) {\n        /** @type {?} */\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\n        pages.push(nextPageSet);\n      }\n    }\n    return pages;\n  }\n  // base class\n  /**\n   * @protected\n   * @return {?}\n   */\n  calculateTotalPages() {\n    /** @type {?} */\n    const totalPages = this.itemsPerPage < 1 ? 1 : Math.ceil(this.totalItems / this.itemsPerPage);\n    return Math.max(totalPages || 0, 1);\n  }\n}\nPagerComponent.ɵfac = function PagerComponent_Factory(t) {\n  return new (t || PagerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(PaginationConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\nPagerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: PagerComponent,\n  selectors: [[\"pager\"]],\n  inputs: {\n    itemsPerPage: \"itemsPerPage\",\n    totalItems: \"totalItems\",\n    maxSize: \"maxSize\",\n    rotate: \"rotate\",\n    boundaryLinks: \"boundaryLinks\",\n    directionLinks: \"directionLinks\",\n    pageBtnClass: \"pageBtnClass\",\n    align: \"align\",\n    firstText: \"firstText\",\n    previousText: \"previousText\",\n    nextText: \"nextText\",\n    lastText: \"lastText\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    numPages: \"numPages\",\n    pageChanged: \"pageChanged\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([PAGER_CONTROL_VALUE_ACCESSOR])],\n  decls: 7,\n  vars: 24,\n  consts: [[1, \"pager\"], [3, \"ngClass\"], [\"href\", \"\", 3, \"click\"]],\n  template: function PagerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"ul\", 0)(1, \"li\", 1)(2, \"a\", 2);\n      ɵngcc0.ɵɵlistener(\"click\", function PagerComponent_Template_a_click_2_listener($event) {\n        return ctx.selectPage(ctx.page - 1, $event);\n      });\n      ɵngcc0.ɵɵtext(3);\n      ɵngcc0.ɵɵelementEnd()();\n      ɵngcc0.ɵɵelementStart(4, \"li\", 1)(5, \"a\", 2);\n      ɵngcc0.ɵɵlistener(\"click\", function PagerComponent_Template_a_click_5_listener($event) {\n        return ctx.selectPage(ctx.page + 1, $event);\n      });\n      ɵngcc0.ɵɵtext(6);\n      ɵngcc0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassMap(ctx.pageBtnClass);\n      ɵngcc0.ɵɵclassProp(\"disabled\", ctx.noPrevious())(\"previous\", ctx.align);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(18, _c0, ctx.align, ctx.align));\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵtextInterpolate(ctx.getText(\"previous\"));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassMap(ctx.pageBtnClass);\n      ɵngcc0.ɵɵclassProp(\"disabled\", ctx.noNext())(\"next\", ctx.align);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(21, _c1, ctx.align, ctx.align));\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵtextInterpolate(ctx.getText(\"next\"));\n    }\n  },\n  dependencies: [ɵngcc1.NgClass],\n  encapsulation: 2\n});\n/** @nocollapse */\nPagerComponent.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: PaginationConfig\n}, {\n  type: ChangeDetectorRef\n}];\nPagerComponent.propDecorators = {\n  align: [{\n    type: Input\n  }],\n  maxSize: [{\n    type: Input\n  }],\n  boundaryLinks: [{\n    type: Input\n  }],\n  directionLinks: [{\n    type: Input\n  }],\n  firstText: [{\n    type: Input\n  }],\n  previousText: [{\n    type: Input\n  }],\n  nextText: [{\n    type: Input\n  }],\n  lastText: [{\n    type: Input\n  }],\n  rotate: [{\n    type: Input\n  }],\n  pageBtnClass: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  numPages: [{\n    type: Output\n  }],\n  pageChanged: [{\n    type: Output\n  }],\n  itemsPerPage: [{\n    type: Input\n  }],\n  totalItems: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PagerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'pager',\n      template: \"<ul class=\\\"pager\\\">\\n  <li [class.disabled]=\\\"noPrevious()\\\" [class.previous]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-left': align, 'float-left': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page - 1, $event)\\\">{{ getText('previous') }}</a>\\n  </li>\\n  <li [class.disabled]=\\\"noNext()\\\" [class.next]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-right': align, 'float-right': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page + 1, $event)\\\">{{ getText('next') }}</a>\\n  </li>\\n</ul>\\n\",\n      providers: [PAGER_CONTROL_VALUE_ACCESSOR]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: PaginationConfig\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    numPages: [{\n      type: Output\n    }],\n    pageChanged: [{\n      type: Output\n    }],\n    itemsPerPage: [{\n      type: Input\n    }],\n    totalItems: [{\n      type: Input\n    }],\n    maxSize: [{\n      type: Input\n    }],\n    rotate: [{\n      type: Input\n    }],\n    boundaryLinks: [{\n      type: Input\n    }],\n    directionLinks: [{\n      type: Input\n    }],\n    pageBtnClass: [{\n      type: Input\n    }],\n    align: [{\n      type: Input\n    }],\n    firstText: [{\n      type: Input\n    }],\n    previousText: [{\n      type: Input\n    }],\n    nextText: [{\n      type: Input\n    }],\n    lastText: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\nif (false) {\n  /** @type {?} */\n  PagerComponent.prototype.config;\n  /**\n   * if `true` aligns each link to the sides of pager\n   * @type {?}\n   */\n  PagerComponent.prototype.align;\n  /**\n   * limit number for page links in pager\n   * @type {?}\n   */\n  PagerComponent.prototype.maxSize;\n  /**\n   * if false first and last buttons will be hidden\n   * @type {?}\n   */\n  PagerComponent.prototype.boundaryLinks;\n  /**\n   * if false previous and next buttons will be hidden\n   * @type {?}\n   */\n  PagerComponent.prototype.directionLinks;\n  /**\n   * first button text\n   * @type {?}\n   */\n  PagerComponent.prototype.firstText;\n  /**\n   * previous button text\n   * @type {?}\n   */\n  PagerComponent.prototype.previousText;\n  /**\n   * next button text\n   * @type {?}\n   */\n  PagerComponent.prototype.nextText;\n  /**\n   * last button text\n   * @type {?}\n   */\n  PagerComponent.prototype.lastText;\n  /**\n   * if true current page will in the middle of pages list\n   * @type {?}\n   */\n  PagerComponent.prototype.rotate;\n  /**\n   * add class to <code><li\\></code>\n   * @type {?}\n   */\n  PagerComponent.prototype.pageBtnClass;\n  /**\n   * if true pagination component will be disabled\n   * @type {?}\n   */\n  PagerComponent.prototype.disabled;\n  /**\n   * fired when total pages count changes, $event:number equals to total pages count\n   * @type {?}\n   */\n  PagerComponent.prototype.numPages;\n  /**\n   * fired when page was changed, $event:{page, itemsPerPage} equals to\n   * object with current page index and number of items per page\n   * @type {?}\n   */\n  PagerComponent.prototype.pageChanged;\n  /** @type {?} */\n  PagerComponent.prototype.onChange;\n  /** @type {?} */\n  PagerComponent.prototype.onTouched;\n  /** @type {?} */\n  PagerComponent.prototype.classMap;\n  /** @type {?} */\n  PagerComponent.prototype.pages;\n  /**\n   * @type {?}\n   * @protected\n   */\n  PagerComponent.prototype._itemsPerPage;\n  /**\n   * @type {?}\n   * @protected\n   */\n  PagerComponent.prototype._totalItems;\n  /**\n   * @type {?}\n   * @protected\n   */\n  PagerComponent.prototype._totalPages;\n  /**\n   * @type {?}\n   * @protected\n   */\n  PagerComponent.prototype.inited;\n  /**\n   * @type {?}\n   * @protected\n   */\n  PagerComponent.prototype._page;\n  /**\n   * @type {?}\n   * @private\n   */\n  PagerComponent.prototype.elementRef;\n  /**\n   * @type {?}\n   * @private\n   */\n  PagerComponent.prototype.changeDetection;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction PageChangedEvent() {}\nif (false) {\n  /** @type {?} */\n  PageChangedEvent.prototype.itemsPerPage;\n  /** @type {?} */\n  PageChangedEvent.prototype.page;\n}\n/** @type {?} */\nconst PAGINATION_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(\n  /**\n  * @return {?}\n  */\n  () => PaginationComponent),\n  multi: true\n};\nclass PaginationComponent {\n  /**\n   * @param {?} elementRef\n   * @param {?} paginationConfig\n   * @param {?} changeDetection\n   */\n  constructor(elementRef, paginationConfig, changeDetection) {\n    this.elementRef = elementRef;\n    this.changeDetection = changeDetection;\n    /**\n     * fired when total pages count changes, $event:number equals to total pages count\n     */\n    this.numPages = new EventEmitter();\n    /**\n     * fired when page was changed, $event:{page, itemsPerPage} equals to object\n     * with current page index and number of items per page\n     */\n    this.pageChanged = new EventEmitter();\n    this.onChange = Function.prototype;\n    this.onTouched = Function.prototype;\n    this.inited = false;\n    this._page = 1;\n    this.elementRef = elementRef;\n    if (!this.config) {\n      this.configureOptions(paginationConfig.main);\n    }\n  }\n  /**\n   * maximum number of items per page. If value less than 1 will display all items on one page\n   * @return {?}\n   */\n  get itemsPerPage() {\n    return this._itemsPerPage;\n  }\n  /**\n   * @param {?} v\n   * @return {?}\n   */\n  set itemsPerPage(v) {\n    this._itemsPerPage = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n  /**\n   * total number of items in all pages\n   * @return {?}\n   */\n  get totalItems() {\n    return this._totalItems;\n  }\n  /**\n   * @param {?} v\n   * @return {?}\n   */\n  set totalItems(v) {\n    this._totalItems = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n  /**\n   * @return {?}\n   */\n  get totalPages() {\n    return this._totalPages;\n  }\n  /**\n   * @param {?} v\n   * @return {?}\n   */\n  set totalPages(v) {\n    this._totalPages = v;\n    this.numPages.emit(v);\n    if (this.inited) {\n      this.selectPage(this.page);\n    }\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set page(value) {\n    /** @type {?} */\n    const _previous = this._page;\n    this._page = value > this.totalPages ? this.totalPages : value || 1;\n    this.changeDetection.markForCheck();\n    if (_previous === this._page || typeof _previous === 'undefined') {\n      return;\n    }\n    this.pageChanged.emit({\n      page: this._page,\n      itemsPerPage: this.itemsPerPage\n    });\n  }\n  /**\n   * @return {?}\n   */\n  get page() {\n    return this._page;\n  }\n  /**\n   * @param {?} config\n   * @return {?}\n   */\n  configureOptions(config) {\n    this.config = Object.assign({}, config);\n  }\n  /**\n   * @return {?}\n   */\n  ngOnInit() {\n    if (typeof window !== 'undefined') {\n      this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n    }\n    // watch for maxSize\n    this.maxSize = typeof this.maxSize !== 'undefined' ? this.maxSize : this.config.maxSize;\n    this.rotate = typeof this.rotate !== 'undefined' ? this.rotate : this.config.rotate;\n    this.boundaryLinks = typeof this.boundaryLinks !== 'undefined' ? this.boundaryLinks : this.config.boundaryLinks;\n    this.directionLinks = typeof this.directionLinks !== 'undefined' ? this.directionLinks : this.config.directionLinks;\n    this.pageBtnClass = typeof this.pageBtnClass !== 'undefined' ? this.pageBtnClass : this.config.pageBtnClass;\n    // base class\n    this.itemsPerPage = typeof this.itemsPerPage !== 'undefined' ? this.itemsPerPage : this.config.itemsPerPage;\n    this.totalPages = this.calculateTotalPages();\n    // this class\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.inited = true;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  writeValue(value) {\n    this.page = value;\n    this.pages = this.getPages(this.page, this.totalPages);\n  }\n  /**\n   * @param {?} key\n   * @return {?}\n   */\n  getText(key) {\n    // tslint:disable-next-line:no-any\n    return (/** @type {?} */this[`${key}Text`] || /** @type {?} */this.config[`${key}Text`]\n    );\n  }\n  /**\n   * @return {?}\n   */\n  noPrevious() {\n    return this.page === 1;\n  }\n  /**\n   * @return {?}\n   */\n  noNext() {\n    return this.page === this.totalPages;\n  }\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * @param {?} page\n   * @param {?=} event\n   * @return {?}\n   */\n  selectPage(page, event) {\n    if (event) {\n      event.preventDefault();\n    }\n    if (!this.disabled) {\n      if (event && event.target) {\n        // tslint:disable-next-line:no-any\n        /** @type {?} */\n        const target = event.target;\n        target.blur();\n      }\n      this.writeValue(page);\n      this.onChange(this.page);\n    }\n  }\n  // Create page object used in template\n  /**\n   * @protected\n   * @param {?} num\n   * @param {?} text\n   * @param {?} active\n   * @return {?}\n   */\n  makePage(num, text, active) {\n    return {\n      text,\n      number: num,\n      active\n    };\n  }\n  /**\n   * @protected\n   * @param {?} currentPage\n   * @param {?} totalPages\n   * @return {?}\n   */\n  getPages(currentPage, totalPages) {\n    /** @type {?} */\n    const pages = [];\n    // Default page limits\n    /** @type {?} */\n    let startPage = 1;\n    /** @type {?} */\n    let endPage = totalPages;\n    /** @type {?} */\n    const isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n    // recompute if maxSize\n    if (isMaxSized) {\n      if (this.rotate) {\n        // Current page is displayed in the middle of the visible ones\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n        endPage = startPage + this.maxSize - 1;\n        // Adjust if limit is exceeded\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = endPage - this.maxSize + 1;\n        }\n      } else {\n        // Visible pages are paginated with maxSize\n        startPage = (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n        // Adjust last page if limit is exceeded\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n      }\n    }\n    // Add page number links\n    for (let num = startPage; num <= endPage; num++) {\n      /** @type {?} */\n      const page = this.makePage(num, num.toString(), num === currentPage);\n      pages.push(page);\n    }\n    // Add links to move between page sets\n    if (isMaxSized && !this.rotate) {\n      if (startPage > 1) {\n        /** @type {?} */\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\n        pages.unshift(previousPageSet);\n      }\n      if (endPage < totalPages) {\n        /** @type {?} */\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\n        pages.push(nextPageSet);\n      }\n    }\n    return pages;\n  }\n  // base class\n  /**\n   * @protected\n   * @return {?}\n   */\n  calculateTotalPages() {\n    /** @type {?} */\n    const totalPages = this.itemsPerPage < 1 ? 1 : Math.ceil(this.totalItems / this.itemsPerPage);\n    return Math.max(totalPages || 0, 1);\n  }\n}\nPaginationComponent.ɵfac = function PaginationComponent_Factory(t) {\n  return new (t || PaginationComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(PaginationConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\nPaginationComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: PaginationComponent,\n  selectors: [[\"pagination\"]],\n  inputs: {\n    itemsPerPage: \"itemsPerPage\",\n    totalItems: \"totalItems\",\n    maxSize: \"maxSize\",\n    rotate: \"rotate\",\n    boundaryLinks: \"boundaryLinks\",\n    directionLinks: \"directionLinks\",\n    pageBtnClass: \"pageBtnClass\",\n    align: \"align\",\n    firstText: \"firstText\",\n    previousText: \"previousText\",\n    nextText: \"nextText\",\n    lastText: \"lastText\",\n    disabled: \"disabled\",\n    customPageTemplate: \"customPageTemplate\",\n    customNextTemplate: \"customNextTemplate\",\n    customPreviousTemplate: \"customPreviousTemplate\",\n    customFirstTemplate: \"customFirstTemplate\",\n    customLastTemplate: \"customLastTemplate\"\n  },\n  outputs: {\n    numPages: \"numPages\",\n    pageChanged: \"pageChanged\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([PAGINATION_CONTROL_VALUE_ACCESSOR])],\n  decls: 16,\n  vars: 6,\n  consts: [[1, \"pagination\", 3, \"ngClass\"], [\"class\", \"pagination-first page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"pagination-prev page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"pagination-page page-item\", 3, \"active\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"pagination-next page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"pagination-last page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"defaultPageTemplate\", \"\"], [\"defaultNextTemplate\", \"\"], [\"defaultPreviousTemplate\", \"\"], [\"defaultFirstTemplate\", \"\"], [\"defaultLastTemplate\", \"\"], [1, \"pagination-first\", \"page-item\"], [\"href\", \"\", 1, \"page-link\", 3, \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"pagination-prev\", \"page-item\"], [1, \"pagination-page\", \"page-item\"], [1, \"pagination-next\", \"page-item\"], [1, \"pagination-last\", \"page-item\"]],\n  template: function PaginationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n      ɵngcc0.ɵɵtemplate(1, PaginationComponent_li_1_Template, 3, 7, \"li\", 1);\n      ɵngcc0.ɵɵtemplate(2, PaginationComponent_li_2_Template, 3, 7, \"li\", 2);\n      ɵngcc0.ɵɵtemplate(3, PaginationComponent_li_3_Template, 3, 10, \"li\", 3);\n      ɵngcc0.ɵɵtemplate(4, PaginationComponent_li_4_Template, 3, 7, \"li\", 4);\n      ɵngcc0.ɵɵtemplate(5, PaginationComponent_li_5_Template, 3, 7, \"li\", 5);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(6, PaginationComponent_ng_template_6_Template, 1, 1, \"ng-template\", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(8, PaginationComponent_ng_template_8_Template, 1, 1, \"ng-template\", null, 7, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(10, PaginationComponent_ng_template_10_Template, 1, 1, \"ng-template\", null, 8, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(12, PaginationComponent_ng_template_12_Template, 1, 1, \"ng-template\", null, 9, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(14, PaginationComponent_ng_template_14_Template, 1, 1, \"ng-template\", null, 10, ɵngcc0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.classMap);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.pages);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n    }\n  },\n  dependencies: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2\n});\n/** @nocollapse */\nPaginationComponent.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: PaginationConfig\n}, {\n  type: ChangeDetectorRef\n}];\nPaginationComponent.propDecorators = {\n  align: [{\n    type: Input\n  }],\n  maxSize: [{\n    type: Input\n  }],\n  boundaryLinks: [{\n    type: Input\n  }],\n  directionLinks: [{\n    type: Input\n  }],\n  firstText: [{\n    type: Input\n  }],\n  previousText: [{\n    type: Input\n  }],\n  nextText: [{\n    type: Input\n  }],\n  lastText: [{\n    type: Input\n  }],\n  rotate: [{\n    type: Input\n  }],\n  pageBtnClass: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  customPageTemplate: [{\n    type: Input\n  }],\n  customNextTemplate: [{\n    type: Input\n  }],\n  customPreviousTemplate: [{\n    type: Input\n  }],\n  customFirstTemplate: [{\n    type: Input\n  }],\n  customLastTemplate: [{\n    type: Input\n  }],\n  numPages: [{\n    type: Output\n  }],\n  pageChanged: [{\n    type: Output\n  }],\n  itemsPerPage: [{\n    type: Input\n  }],\n  totalItems: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PaginationComponent, [{\n    type: Component,\n    args: [{\n      selector: 'pagination',\n      template: \"<ul class=\\\"pagination\\\" [ngClass]=\\\"classMap\\\">\\n  <li class=\\\"pagination-first page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customFirstTemplate || defaultFirstTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-prev page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page - 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPreviousTemplate || defaultPreviousTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li *ngFor=\\\"let pg of pages\\\"\\n      [class.active]=\\\"pg.active\\\"\\n      [class.disabled]=\\\"disabled && !pg.active\\\"\\n      class=\\\"pagination-page page-item\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(pg.number, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPageTemplate || defaultPageTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: disabled, $implicit: pg, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-next page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page + 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customNextTemplate || defaultNextTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-last page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(totalPages, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customLastTemplate || defaultLastTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n</ul>\\n\\n<ng-template #defaultPageTemplate let-page>{{ page.text }}</ng-template>\\n\\n<ng-template #defaultNextTemplate>{{ getText('next') }}</ng-template>\\n\\n<ng-template #defaultPreviousTemplate>{{ getText('previous') }}</ng-template>\\n\\n<ng-template #defaultFirstTemplate>{{ getText('first') }}</ng-template>\\n\\n<ng-template #defaultLastTemplate>{{ getText('last') }}</ng-template>\\n\",\n      providers: [PAGINATION_CONTROL_VALUE_ACCESSOR]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: PaginationConfig\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    numPages: [{\n      type: Output\n    }],\n    pageChanged: [{\n      type: Output\n    }],\n    itemsPerPage: [{\n      type: Input\n    }],\n    totalItems: [{\n      type: Input\n    }],\n    maxSize: [{\n      type: Input\n    }],\n    rotate: [{\n      type: Input\n    }],\n    boundaryLinks: [{\n      type: Input\n    }],\n    directionLinks: [{\n      type: Input\n    }],\n    pageBtnClass: [{\n      type: Input\n    }],\n    align: [{\n      type: Input\n    }],\n    firstText: [{\n      type: Input\n    }],\n    previousText: [{\n      type: Input\n    }],\n    nextText: [{\n      type: Input\n    }],\n    lastText: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    customPageTemplate: [{\n      type: Input\n    }],\n    customNextTemplate: [{\n      type: Input\n    }],\n    customPreviousTemplate: [{\n      type: Input\n    }],\n    customFirstTemplate: [{\n      type: Input\n    }],\n    customLastTemplate: [{\n      type: Input\n    }]\n  });\n})();\nif (false) {\n  /** @type {?} */\n  PaginationComponent.prototype.config;\n  /**\n   * if `true` aligns each link to the sides of pager\n   * @type {?}\n   */\n  PaginationComponent.prototype.align;\n  /**\n   * limit number for page links in pager\n   * @type {?}\n   */\n  PaginationComponent.prototype.maxSize;\n  /**\n   * if false first and last buttons will be hidden\n   * @type {?}\n   */\n  PaginationComponent.prototype.boundaryLinks;\n  /**\n   * if false previous and next buttons will be hidden\n   * @type {?}\n   */\n  PaginationComponent.prototype.directionLinks;\n  /**\n   * first button text\n   * @type {?}\n   */\n  PaginationComponent.prototype.firstText;\n  /**\n   * previous button text\n   * @type {?}\n   */\n  PaginationComponent.prototype.previousText;\n  /**\n   * next button text\n   * @type {?}\n   */\n  PaginationComponent.prototype.nextText;\n  /**\n   * last button text\n   * @type {?}\n   */\n  PaginationComponent.prototype.lastText;\n  /**\n   * if true current page will in the middle of pages list\n   * @type {?}\n   */\n  PaginationComponent.prototype.rotate;\n  /**\n   * add class to <code><li\\></code>\n   * @type {?}\n   */\n  PaginationComponent.prototype.pageBtnClass;\n  /**\n   * if true pagination component will be disabled\n   * @type {?}\n   */\n  PaginationComponent.prototype.disabled;\n  /**\n   * custom template for page link\n   * @type {?}\n   */\n  PaginationComponent.prototype.customPageTemplate;\n  /**\n   * custom template for next link\n   * @type {?}\n   */\n  PaginationComponent.prototype.customNextTemplate;\n  /**\n   * custom template for previous link\n   * @type {?}\n   */\n  PaginationComponent.prototype.customPreviousTemplate;\n  /**\n   * custom template for first link\n   * @type {?}\n   */\n  PaginationComponent.prototype.customFirstTemplate;\n  /**\n   * custom template for last link\n   * @type {?}\n   */\n  PaginationComponent.prototype.customLastTemplate;\n  /**\n   * fired when total pages count changes, $event:number equals to total pages count\n   * @type {?}\n   */\n  PaginationComponent.prototype.numPages;\n  /**\n   * fired when page was changed, $event:{page, itemsPerPage} equals to object\n   * with current page index and number of items per page\n   * @type {?}\n   */\n  PaginationComponent.prototype.pageChanged;\n  /** @type {?} */\n  PaginationComponent.prototype.onChange;\n  /** @type {?} */\n  PaginationComponent.prototype.onTouched;\n  /** @type {?} */\n  PaginationComponent.prototype.classMap;\n  /** @type {?} */\n  PaginationComponent.prototype.pages;\n  /**\n   * @type {?}\n   * @protected\n   */\n  PaginationComponent.prototype._itemsPerPage;\n  /**\n   * @type {?}\n   * @protected\n   */\n  PaginationComponent.prototype._totalItems;\n  /**\n   * @type {?}\n   * @protected\n   */\n  PaginationComponent.prototype._totalPages;\n  /**\n   * @type {?}\n   * @protected\n   */\n  PaginationComponent.prototype.inited;\n  /**\n   * @type {?}\n   * @protected\n   */\n  PaginationComponent.prototype._page;\n  /**\n   * @type {?}\n   * @private\n   */\n  PaginationComponent.prototype.elementRef;\n  /**\n   * @type {?}\n   * @private\n   */\n  PaginationComponent.prototype.changeDetection;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PaginationModule {\n  /**\n   * @return {?}\n   */\n  static forRoot() {\n    return {\n      ngModule: PaginationModule,\n      providers: []\n    };\n  }\n}\nPaginationModule.ɵfac = function PaginationModule_Factory(t) {\n  return new (t || PaginationModule)();\n};\nPaginationModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: PaginationModule\n});\nPaginationModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PaginationModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [PagerComponent, PaginationComponent],\n      exports: [PagerComponent, PaginationComponent]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PaginationModule, {\n    declarations: function () {\n      return [PagerComponent, PaginationComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [PagerComponent, PaginationComponent];\n    }\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { PagerComponent, PaginationComponent, PaginationConfig, PaginationModule, PAGER_CONTROL_VALUE_ACCESSOR as ɵa, PAGINATION_CONTROL_VALUE_ACCESSOR as ɵb };","map":{"version":3,"names":["Injectable","ɵɵdefineInjectable","forwardRef","EventEmitter","Component","ElementRef","ChangeDetectorRef","Input","Output","NgModule","NG_VALUE_ACCESSOR","CommonModule","ɵngcc0","ɵngcc1","_c0","a0","a1","_c1","_c2","disabled","currentPage","PaginationComponent_li_1_Template","rf","ctx","_r16","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","PaginationComponent_li_1_Template_a_click_1_listener","$event","ɵɵrestoreView","ctx_r15","ɵɵnextContext","ɵɵresetView","selectPage","ɵɵelementContainer","ɵɵelementEnd","ctx_r0","_r11","ɵɵreference","ɵɵclassProp","noPrevious","ɵɵadvance","ɵɵproperty","customFirstTemplate","ɵɵpureFunction2","page","PaginationComponent_li_2_Template","_r18","PaginationComponent_li_2_Template_a_click_1_listener","ctx_r17","ctx_r1","_r9","customPreviousTemplate","_c3","a2","$implicit","PaginationComponent_li_3_Template","_r21","PaginationComponent_li_3_Template_a_click_1_listener","restoredCtx","pg_r19","ctx_r20","number","ctx_r2","_r5","active","customPageTemplate","ɵɵpureFunction3","PaginationComponent_li_4_Template","_r23","PaginationComponent_li_4_Template_a_click_1_listener","ctx_r22","ctx_r3","_r7","noNext","customNextTemplate","PaginationComponent_li_5_Template","_r25","PaginationComponent_li_5_Template_a_click_1_listener","ctx_r24","totalPages","ctx_r4","_r13","customLastTemplate","PaginationComponent_ng_template_6_Template","ɵɵtext","page_r26","ɵɵtextInterpolate","text","PaginationComponent_ng_template_8_Template","ctx_r8","getText","PaginationComponent_ng_template_10_Template","ctx_r10","PaginationComponent_ng_template_12_Template","ctx_r12","PaginationComponent_ng_template_14_Template","ctx_r14","PaginationConfig","constructor","main","maxSize","itemsPerPage","boundaryLinks","directionLinks","firstText","previousText","nextText","lastText","pageBtnClass","rotate","pager","align","ɵfac","PaginationConfig_Factory","t","ɵprov","factory","token","providedIn","ngDevMode","ɵsetClassMetadata","type","args","prototype","PAGER_CONTROL_VALUE_ACCESSOR","provide","useExisting","PagerComponent","multi","elementRef","paginationConfig","changeDetection","numPages","pageChanged","onChange","Function","onTouched","inited","_page","config","configureOptions","Object","assign","_itemsPerPage","v","calculateTotalPages","totalItems","_totalItems","_totalPages","emit","value","_previous","markForCheck","ngOnInit","window","classMap","nativeElement","getAttribute","pages","getPages","writeValue","key","registerOnChange","fn","registerOnTouched","event","preventDefault","target","blur","makePage","num","startPage","endPage","isMaxSized","Math","max","floor","ceil","min","toString","push","previousPageSet","unshift","nextPageSet","PagerComponent_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","selectors","inputs","outputs","features","ɵɵProvidersFeature","decls","vars","consts","template","PagerComponent_Template","PagerComponent_Template_a_click_2_listener","PagerComponent_Template_a_click_5_listener","ɵɵclassMap","dependencies","NgClass","encapsulation","ctorParameters","propDecorators","selector","providers","PageChangedEvent","PAGINATION_CONTROL_VALUE_ACCESSOR","PaginationComponent","PaginationComponent_Factory","PaginationComponent_Template","ɵɵtemplate","ɵɵtemplateRefExtractor","NgForOf","NgIf","NgTemplateOutlet","PaginationModule","forRoot","ngModule","PaginationModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope","ɵa","ɵb"],"sources":["D:/Harry/NetCore/DACCodingAssignment/DACCodingAssignment/clientfront/node_modules/ngx-bootstrap/__ivy_ngcc__/pagination/fesm2015/ngx-bootstrap-pagination.js"],"sourcesContent":["import { Injectable, ɵɵdefineInjectable, forwardRef, EventEmitter, Component, ElementRef, ChangeDetectorRef, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Provides default values for Pagination and pager components\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = function (a0, a1) { return { \"pull-left\": a0, \"float-left\": a1 }; };\nconst _c1 = function (a0, a1) { return { \"pull-right\": a0, \"float-right\": a1 }; };\nconst _c2 = function (a0, a1) { return { disabled: a0, currentPage: a1 }; };\nfunction PaginationComponent_li_1_Template(rf, ctx) { if (rf & 1) {\n    const _r16 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 11)(1, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function PaginationComponent_li_1_Template_a_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r15.selectPage(1, $event)); });\n    ɵngcc0.ɵɵelementContainer(2, 13);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    const _r11 = ɵngcc0.ɵɵreference(13);\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r0.noPrevious() || ctx_r0.disabled);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.customFirstTemplate || _r11)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(4, _c2, ctx_r0.noPrevious() || ctx_r0.disabled, ctx_r0.page));\n} }\nfunction PaginationComponent_li_2_Template(rf, ctx) { if (rf & 1) {\n    const _r18 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 14)(1, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function PaginationComponent_li_2_Template_a_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r18); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r17.selectPage(ctx_r17.page - 1, $event)); });\n    ɵngcc0.ɵɵelementContainer(2, 13);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    const _r9 = ɵngcc0.ɵɵreference(11);\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r1.noPrevious() || ctx_r1.disabled);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.customPreviousTemplate || _r9)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(4, _c2, ctx_r1.noPrevious() || ctx_r1.disabled, ctx_r1.page));\n} }\nconst _c3 = function (a0, a1, a2) { return { disabled: a0, $implicit: a1, currentPage: a2 }; };\nfunction PaginationComponent_li_3_Template(rf, ctx) { if (rf & 1) {\n    const _r21 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15)(1, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function PaginationComponent_li_3_Template_a_click_1_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r21); const pg_r19 = restoredCtx.$implicit; const ctx_r20 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r20.selectPage(pg_r19.number, $event)); });\n    ɵngcc0.ɵɵelementContainer(2, 13);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const pg_r19 = ctx.$implicit;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    const _r5 = ɵngcc0.ɵɵreference(7);\n    ɵngcc0.ɵɵclassProp(\"active\", pg_r19.active)(\"disabled\", ctx_r2.disabled && !pg_r19.active);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.customPageTemplate || _r5)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(6, _c3, ctx_r2.disabled, pg_r19, ctx_r2.page));\n} }\nfunction PaginationComponent_li_4_Template(rf, ctx) { if (rf & 1) {\n    const _r23 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 16)(1, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function PaginationComponent_li_4_Template_a_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r23); const ctx_r22 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r22.selectPage(ctx_r22.page + 1, $event)); });\n    ɵngcc0.ɵɵelementContainer(2, 13);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    const _r7 = ɵngcc0.ɵɵreference(9);\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r3.noNext() || ctx_r3.disabled);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.customNextTemplate || _r7)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(4, _c2, ctx_r3.noNext() || ctx_r3.disabled, ctx_r3.page));\n} }\nfunction PaginationComponent_li_5_Template(rf, ctx) { if (rf & 1) {\n    const _r25 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 17)(1, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function PaginationComponent_li_5_Template_a_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r25); const ctx_r24 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r24.selectPage(ctx_r24.totalPages, $event)); });\n    ɵngcc0.ɵɵelementContainer(2, 13);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    const _r13 = ɵngcc0.ɵɵreference(15);\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r4.noNext() || ctx_r4.disabled);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.customLastTemplate || _r13)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(4, _c2, ctx_r4.noNext() || ctx_r4.disabled, ctx_r4.page));\n} }\nfunction PaginationComponent_ng_template_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const page_r26 = ctx.$implicit;\n    ɵngcc0.ɵɵtextInterpolate(page_r26.text);\n} }\nfunction PaginationComponent_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵtextInterpolate(ctx_r8.getText(\"next\"));\n} }\nfunction PaginationComponent_ng_template_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10.getText(\"previous\"));\n} }\nfunction PaginationComponent_ng_template_12_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵtextInterpolate(ctx_r12.getText(\"first\"));\n} }\nfunction PaginationComponent_ng_template_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const ctx_r14 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵtextInterpolate(ctx_r14.getText(\"last\"));\n} }\nclass PaginationConfig {\n    constructor() {\n        this.main = {\n            maxSize: void 0,\n            itemsPerPage: 10,\n            boundaryLinks: false,\n            directionLinks: true,\n            firstText: 'First',\n            previousText: 'Previous',\n            nextText: 'Next',\n            lastText: 'Last',\n            pageBtnClass: '',\n            rotate: true\n        };\n        this.pager = {\n            itemsPerPage: 15,\n            previousText: '« Previous',\n            nextText: 'Next »',\n            pageBtnClass: '',\n            align: true\n        };\n    }\n}\nPaginationConfig.ɵfac = function PaginationConfig_Factory(t) { return new (t || PaginationConfig)(); };\n/** @nocollapse */ PaginationConfig.ɵprov = ɵɵdefineInjectable({ factory: function PaginationConfig_Factory() { return new PaginationConfig(); }, token: PaginationConfig, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PaginationConfig, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /** @type {?} */\n    PaginationConfig.prototype.main;\n    /** @type {?} */\n    PaginationConfig.prototype.pager;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst PAGER_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    /* tslint:disable-next-line: no-use-before-declare */\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => PagerComponent)),\n    multi: true\n};\nclass PagerComponent {\n    /**\n     * @param {?} elementRef\n     * @param {?} paginationConfig\n     * @param {?} changeDetection\n     */\n    constructor(elementRef, paginationConfig, changeDetection) {\n        this.elementRef = elementRef;\n        this.changeDetection = changeDetection;\n        /**\n         * fired when total pages count changes, $event:number equals to total pages count\n         */\n        this.numPages = new EventEmitter();\n        /**\n         * fired when page was changed, $event:{page, itemsPerPage} equals to\n         * object with current page index and number of items per page\n         */\n        this.pageChanged = new EventEmitter();\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n        this.inited = false;\n        this._page = 1;\n        this.elementRef = elementRef;\n        if (!this.config) {\n            this.configureOptions(Object.assign({}, paginationConfig.main, paginationConfig.pager));\n        }\n    }\n    /**\n     * maximum number of items per page. If value less than 1 will display all items on one page\n     * @return {?}\n     */\n    get itemsPerPage() {\n        return this._itemsPerPage;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set itemsPerPage(v) {\n        this._itemsPerPage = v;\n        this.totalPages = this.calculateTotalPages();\n    }\n    /**\n     * total number of items in all pages\n     * @return {?}\n     */\n    get totalItems() {\n        return this._totalItems;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set totalItems(v) {\n        this._totalItems = v;\n        this.totalPages = this.calculateTotalPages();\n    }\n    /**\n     * @return {?}\n     */\n    get totalPages() {\n        return this._totalPages;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set totalPages(v) {\n        this._totalPages = v;\n        this.numPages.emit(v);\n        if (this.inited) {\n            this.selectPage(this.page);\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set page(value) {\n        /** @type {?} */\n        const _previous = this._page;\n        this._page = value > this.totalPages ? this.totalPages : value || 1;\n        this.changeDetection.markForCheck();\n        if (_previous === this._page || typeof _previous === 'undefined') {\n            return;\n        }\n        this.pageChanged.emit({\n            page: this._page,\n            itemsPerPage: this.itemsPerPage\n        });\n    }\n    /**\n     * @return {?}\n     */\n    get page() {\n        return this._page;\n    }\n    /**\n     * @param {?} config\n     * @return {?}\n     */\n    configureOptions(config) {\n        this.config = Object.assign({}, config);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (typeof window !== 'undefined') {\n            this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n        }\n        // watch for maxSize\n        this.maxSize =\n            typeof this.maxSize !== 'undefined' ? this.maxSize : this.config.maxSize;\n        this.rotate =\n            typeof this.rotate !== 'undefined' ? this.rotate : this.config.rotate;\n        this.boundaryLinks =\n            typeof this.boundaryLinks !== 'undefined'\n                ? this.boundaryLinks\n                : this.config.boundaryLinks;\n        this.directionLinks =\n            typeof this.directionLinks !== 'undefined'\n                ? this.directionLinks\n                : this.config.directionLinks;\n        this.pageBtnClass =\n            typeof this.pageBtnClass !== 'undefined'\n                ? this.pageBtnClass\n                : this.config.pageBtnClass;\n        // base class\n        this.itemsPerPage =\n            typeof this.itemsPerPage !== 'undefined'\n                ? this.itemsPerPage\n                : this.config.itemsPerPage;\n        this.totalPages = this.calculateTotalPages();\n        // this class\n        this.pages = this.getPages(this.page, this.totalPages);\n        this.inited = true;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.page = value;\n        this.pages = this.getPages(this.page, this.totalPages);\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    getText(key) {\n        // tslint:disable-next-line:no-any\n        return ((/** @type {?} */ (this)))[`${key}Text`] || ((/** @type {?} */ (this))).config[`${key}Text`];\n    }\n    /**\n     * @return {?}\n     */\n    noPrevious() {\n        return this.page === 1;\n    }\n    /**\n     * @return {?}\n     */\n    noNext() {\n        return this.page === this.totalPages;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * @param {?} page\n     * @param {?=} event\n     * @return {?}\n     */\n    selectPage(page, event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (!this.disabled) {\n            if (event && event.target) {\n                // tslint:disable-next-line:no-any\n                /** @type {?} */\n                const target = event.target;\n                target.blur();\n            }\n            this.writeValue(page);\n            this.onChange(this.page);\n        }\n    }\n    // Create page object used in template\n    /**\n     * @protected\n     * @param {?} num\n     * @param {?} text\n     * @param {?} active\n     * @return {?}\n     */\n    makePage(num, text, active) {\n        return { text, number: num, active };\n    }\n    /**\n     * @protected\n     * @param {?} currentPage\n     * @param {?} totalPages\n     * @return {?}\n     */\n    getPages(currentPage, totalPages) {\n        /** @type {?} */\n        const pages = [];\n        // Default page limits\n        /** @type {?} */\n        let startPage = 1;\n        /** @type {?} */\n        let endPage = totalPages;\n        /** @type {?} */\n        const isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n        // recompute if maxSize\n        if (isMaxSized) {\n            if (this.rotate) {\n                // Current page is displayed in the middle of the visible ones\n                startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n                endPage = startPage + this.maxSize - 1;\n                // Adjust if limit is exceeded\n                if (endPage > totalPages) {\n                    endPage = totalPages;\n                    startPage = endPage - this.maxSize + 1;\n                }\n            }\n            else {\n                // Visible pages are paginated with maxSize\n                startPage =\n                    (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n                // Adjust last page if limit is exceeded\n                endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n            }\n        }\n        // Add page number links\n        for (let num = startPage; num <= endPage; num++) {\n            /** @type {?} */\n            const page = this.makePage(num, num.toString(), num === currentPage);\n            pages.push(page);\n        }\n        // Add links to move between page sets\n        if (isMaxSized && !this.rotate) {\n            if (startPage > 1) {\n                /** @type {?} */\n                const previousPageSet = this.makePage(startPage - 1, '...', false);\n                pages.unshift(previousPageSet);\n            }\n            if (endPage < totalPages) {\n                /** @type {?} */\n                const nextPageSet = this.makePage(endPage + 1, '...', false);\n                pages.push(nextPageSet);\n            }\n        }\n        return pages;\n    }\n    // base class\n    /**\n     * @protected\n     * @return {?}\n     */\n    calculateTotalPages() {\n        /** @type {?} */\n        const totalPages = this.itemsPerPage < 1\n            ? 1\n            : Math.ceil(this.totalItems / this.itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n    }\n}\nPagerComponent.ɵfac = function PagerComponent_Factory(t) { return new (t || PagerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(PaginationConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nPagerComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PagerComponent, selectors: [[\"pager\"]], inputs: { itemsPerPage: \"itemsPerPage\", totalItems: \"totalItems\", maxSize: \"maxSize\", rotate: \"rotate\", boundaryLinks: \"boundaryLinks\", directionLinks: \"directionLinks\", pageBtnClass: \"pageBtnClass\", align: \"align\", firstText: \"firstText\", previousText: \"previousText\", nextText: \"nextText\", lastText: \"lastText\", disabled: \"disabled\" }, outputs: { numPages: \"numPages\", pageChanged: \"pageChanged\" }, features: [ɵngcc0.ɵɵProvidersFeature([PAGER_CONTROL_VALUE_ACCESSOR])], decls: 7, vars: 24, consts: [[1, \"pager\"], [3, \"ngClass\"], [\"href\", \"\", 3, \"click\"]], template: function PagerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ul\", 0)(1, \"li\", 1)(2, \"a\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function PagerComponent_Template_a_click_2_listener($event) { return ctx.selectPage(ctx.page - 1, $event); });\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(4, \"li\", 1)(5, \"a\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function PagerComponent_Template_a_click_5_listener($event) { return ctx.selectPage(ctx.page + 1, $event); });\n        ɵngcc0.ɵɵtext(6);\n        ɵngcc0.ɵɵelementEnd()()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMap(ctx.pageBtnClass);\n        ɵngcc0.ɵɵclassProp(\"disabled\", ctx.noPrevious())(\"previous\", ctx.align);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(18, _c0, ctx.align, ctx.align));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.getText(\"previous\"));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMap(ctx.pageBtnClass);\n        ɵngcc0.ɵɵclassProp(\"disabled\", ctx.noNext())(\"next\", ctx.align);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(21, _c1, ctx.align, ctx.align));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.getText(\"next\"));\n    } }, dependencies: [ɵngcc1.NgClass], encapsulation: 2 });\n/** @nocollapse */\nPagerComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: PaginationConfig },\n    { type: ChangeDetectorRef }\n];\nPagerComponent.propDecorators = {\n    align: [{ type: Input }],\n    maxSize: [{ type: Input }],\n    boundaryLinks: [{ type: Input }],\n    directionLinks: [{ type: Input }],\n    firstText: [{ type: Input }],\n    previousText: [{ type: Input }],\n    nextText: [{ type: Input }],\n    lastText: [{ type: Input }],\n    rotate: [{ type: Input }],\n    pageBtnClass: [{ type: Input }],\n    disabled: [{ type: Input }],\n    numPages: [{ type: Output }],\n    pageChanged: [{ type: Output }],\n    itemsPerPage: [{ type: Input }],\n    totalItems: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PagerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'pager',\n                template: \"<ul class=\\\"pager\\\">\\n  <li [class.disabled]=\\\"noPrevious()\\\" [class.previous]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-left': align, 'float-left': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page - 1, $event)\\\">{{ getText('previous') }}</a>\\n  </li>\\n  <li [class.disabled]=\\\"noNext()\\\" [class.next]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-right': align, 'float-right': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page + 1, $event)\\\">{{ getText('next') }}</a>\\n  </li>\\n</ul>\\n\",\n                providers: [PAGER_CONTROL_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: PaginationConfig }, { type: ɵngcc0.ChangeDetectorRef }]; }, { numPages: [{\n            type: Output\n        }], pageChanged: [{\n            type: Output\n        }], itemsPerPage: [{\n            type: Input\n        }], totalItems: [{\n            type: Input\n        }], maxSize: [{\n            type: Input\n        }], rotate: [{\n            type: Input\n        }], boundaryLinks: [{\n            type: Input\n        }], directionLinks: [{\n            type: Input\n        }], pageBtnClass: [{\n            type: Input\n        }], align: [{\n            type: Input\n        }], firstText: [{\n            type: Input\n        }], previousText: [{\n            type: Input\n        }], nextText: [{\n            type: Input\n        }], lastText: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    PagerComponent.prototype.config;\n    /**\n     * if `true` aligns each link to the sides of pager\n     * @type {?}\n     */\n    PagerComponent.prototype.align;\n    /**\n     * limit number for page links in pager\n     * @type {?}\n     */\n    PagerComponent.prototype.maxSize;\n    /**\n     * if false first and last buttons will be hidden\n     * @type {?}\n     */\n    PagerComponent.prototype.boundaryLinks;\n    /**\n     * if false previous and next buttons will be hidden\n     * @type {?}\n     */\n    PagerComponent.prototype.directionLinks;\n    /**\n     * first button text\n     * @type {?}\n     */\n    PagerComponent.prototype.firstText;\n    /**\n     * previous button text\n     * @type {?}\n     */\n    PagerComponent.prototype.previousText;\n    /**\n     * next button text\n     * @type {?}\n     */\n    PagerComponent.prototype.nextText;\n    /**\n     * last button text\n     * @type {?}\n     */\n    PagerComponent.prototype.lastText;\n    /**\n     * if true current page will in the middle of pages list\n     * @type {?}\n     */\n    PagerComponent.prototype.rotate;\n    /**\n     * add class to <code><li\\></code>\n     * @type {?}\n     */\n    PagerComponent.prototype.pageBtnClass;\n    /**\n     * if true pagination component will be disabled\n     * @type {?}\n     */\n    PagerComponent.prototype.disabled;\n    /**\n     * fired when total pages count changes, $event:number equals to total pages count\n     * @type {?}\n     */\n    PagerComponent.prototype.numPages;\n    /**\n     * fired when page was changed, $event:{page, itemsPerPage} equals to\n     * object with current page index and number of items per page\n     * @type {?}\n     */\n    PagerComponent.prototype.pageChanged;\n    /** @type {?} */\n    PagerComponent.prototype.onChange;\n    /** @type {?} */\n    PagerComponent.prototype.onTouched;\n    /** @type {?} */\n    PagerComponent.prototype.classMap;\n    /** @type {?} */\n    PagerComponent.prototype.pages;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PagerComponent.prototype._itemsPerPage;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PagerComponent.prototype._totalItems;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PagerComponent.prototype._totalPages;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PagerComponent.prototype.inited;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PagerComponent.prototype._page;\n    /**\n     * @type {?}\n     * @private\n     */\n    PagerComponent.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    PagerComponent.prototype.changeDetection;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction PageChangedEvent() { }\nif (false) {\n    /** @type {?} */\n    PageChangedEvent.prototype.itemsPerPage;\n    /** @type {?} */\n    PageChangedEvent.prototype.page;\n}\n/** @type {?} */\nconst PAGINATION_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    /* tslint:disable-next-line: no-use-before-declare */\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => PaginationComponent)),\n    multi: true\n};\nclass PaginationComponent {\n    /**\n     * @param {?} elementRef\n     * @param {?} paginationConfig\n     * @param {?} changeDetection\n     */\n    constructor(elementRef, paginationConfig, changeDetection) {\n        this.elementRef = elementRef;\n        this.changeDetection = changeDetection;\n        /**\n         * fired when total pages count changes, $event:number equals to total pages count\n         */\n        this.numPages = new EventEmitter();\n        /**\n         * fired when page was changed, $event:{page, itemsPerPage} equals to object\n         * with current page index and number of items per page\n         */\n        this.pageChanged = new EventEmitter();\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n        this.inited = false;\n        this._page = 1;\n        this.elementRef = elementRef;\n        if (!this.config) {\n            this.configureOptions(paginationConfig.main);\n        }\n    }\n    /**\n     * maximum number of items per page. If value less than 1 will display all items on one page\n     * @return {?}\n     */\n    get itemsPerPage() {\n        return this._itemsPerPage;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set itemsPerPage(v) {\n        this._itemsPerPage = v;\n        this.totalPages = this.calculateTotalPages();\n    }\n    /**\n     * total number of items in all pages\n     * @return {?}\n     */\n    get totalItems() {\n        return this._totalItems;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set totalItems(v) {\n        this._totalItems = v;\n        this.totalPages = this.calculateTotalPages();\n    }\n    /**\n     * @return {?}\n     */\n    get totalPages() {\n        return this._totalPages;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set totalPages(v) {\n        this._totalPages = v;\n        this.numPages.emit(v);\n        if (this.inited) {\n            this.selectPage(this.page);\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set page(value) {\n        /** @type {?} */\n        const _previous = this._page;\n        this._page = value > this.totalPages ? this.totalPages : value || 1;\n        this.changeDetection.markForCheck();\n        if (_previous === this._page || typeof _previous === 'undefined') {\n            return;\n        }\n        this.pageChanged.emit({\n            page: this._page,\n            itemsPerPage: this.itemsPerPage\n        });\n    }\n    /**\n     * @return {?}\n     */\n    get page() {\n        return this._page;\n    }\n    /**\n     * @param {?} config\n     * @return {?}\n     */\n    configureOptions(config) {\n        this.config = Object.assign({}, config);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (typeof window !== 'undefined') {\n            this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n        }\n        // watch for maxSize\n        this.maxSize =\n            typeof this.maxSize !== 'undefined' ? this.maxSize : this.config.maxSize;\n        this.rotate =\n            typeof this.rotate !== 'undefined' ? this.rotate : this.config.rotate;\n        this.boundaryLinks =\n            typeof this.boundaryLinks !== 'undefined'\n                ? this.boundaryLinks\n                : this.config.boundaryLinks;\n        this.directionLinks =\n            typeof this.directionLinks !== 'undefined'\n                ? this.directionLinks\n                : this.config.directionLinks;\n        this.pageBtnClass =\n            typeof this.pageBtnClass !== 'undefined'\n                ? this.pageBtnClass\n                : this.config.pageBtnClass;\n        // base class\n        this.itemsPerPage =\n            typeof this.itemsPerPage !== 'undefined'\n                ? this.itemsPerPage\n                : this.config.itemsPerPage;\n        this.totalPages = this.calculateTotalPages();\n        // this class\n        this.pages = this.getPages(this.page, this.totalPages);\n        this.inited = true;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.page = value;\n        this.pages = this.getPages(this.page, this.totalPages);\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    getText(key) {\n        // tslint:disable-next-line:no-any\n        return ((/** @type {?} */ (this)))[`${key}Text`] || ((/** @type {?} */ (this))).config[`${key}Text`];\n    }\n    /**\n     * @return {?}\n     */\n    noPrevious() {\n        return this.page === 1;\n    }\n    /**\n     * @return {?}\n     */\n    noNext() {\n        return this.page === this.totalPages;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * @param {?} page\n     * @param {?=} event\n     * @return {?}\n     */\n    selectPage(page, event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (!this.disabled) {\n            if (event && event.target) {\n                // tslint:disable-next-line:no-any\n                /** @type {?} */\n                const target = event.target;\n                target.blur();\n            }\n            this.writeValue(page);\n            this.onChange(this.page);\n        }\n    }\n    // Create page object used in template\n    /**\n     * @protected\n     * @param {?} num\n     * @param {?} text\n     * @param {?} active\n     * @return {?}\n     */\n    makePage(num, text, active) {\n        return { text, number: num, active };\n    }\n    /**\n     * @protected\n     * @param {?} currentPage\n     * @param {?} totalPages\n     * @return {?}\n     */\n    getPages(currentPage, totalPages) {\n        /** @type {?} */\n        const pages = [];\n        // Default page limits\n        /** @type {?} */\n        let startPage = 1;\n        /** @type {?} */\n        let endPage = totalPages;\n        /** @type {?} */\n        const isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n        // recompute if maxSize\n        if (isMaxSized) {\n            if (this.rotate) {\n                // Current page is displayed in the middle of the visible ones\n                startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n                endPage = startPage + this.maxSize - 1;\n                // Adjust if limit is exceeded\n                if (endPage > totalPages) {\n                    endPage = totalPages;\n                    startPage = endPage - this.maxSize + 1;\n                }\n            }\n            else {\n                // Visible pages are paginated with maxSize\n                startPage =\n                    (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n                // Adjust last page if limit is exceeded\n                endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n            }\n        }\n        // Add page number links\n        for (let num = startPage; num <= endPage; num++) {\n            /** @type {?} */\n            const page = this.makePage(num, num.toString(), num === currentPage);\n            pages.push(page);\n        }\n        // Add links to move between page sets\n        if (isMaxSized && !this.rotate) {\n            if (startPage > 1) {\n                /** @type {?} */\n                const previousPageSet = this.makePage(startPage - 1, '...', false);\n                pages.unshift(previousPageSet);\n            }\n            if (endPage < totalPages) {\n                /** @type {?} */\n                const nextPageSet = this.makePage(endPage + 1, '...', false);\n                pages.push(nextPageSet);\n            }\n        }\n        return pages;\n    }\n    // base class\n    /**\n     * @protected\n     * @return {?}\n     */\n    calculateTotalPages() {\n        /** @type {?} */\n        const totalPages = this.itemsPerPage < 1\n            ? 1\n            : Math.ceil(this.totalItems / this.itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n    }\n}\nPaginationComponent.ɵfac = function PaginationComponent_Factory(t) { return new (t || PaginationComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(PaginationConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nPaginationComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PaginationComponent, selectors: [[\"pagination\"]], inputs: { itemsPerPage: \"itemsPerPage\", totalItems: \"totalItems\", maxSize: \"maxSize\", rotate: \"rotate\", boundaryLinks: \"boundaryLinks\", directionLinks: \"directionLinks\", pageBtnClass: \"pageBtnClass\", align: \"align\", firstText: \"firstText\", previousText: \"previousText\", nextText: \"nextText\", lastText: \"lastText\", disabled: \"disabled\", customPageTemplate: \"customPageTemplate\", customNextTemplate: \"customNextTemplate\", customPreviousTemplate: \"customPreviousTemplate\", customFirstTemplate: \"customFirstTemplate\", customLastTemplate: \"customLastTemplate\" }, outputs: { numPages: \"numPages\", pageChanged: \"pageChanged\" }, features: [ɵngcc0.ɵɵProvidersFeature([PAGINATION_CONTROL_VALUE_ACCESSOR])], decls: 16, vars: 6, consts: [[1, \"pagination\", 3, \"ngClass\"], [\"class\", \"pagination-first page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"pagination-prev page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"pagination-page page-item\", 3, \"active\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"pagination-next page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"pagination-last page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"defaultPageTemplate\", \"\"], [\"defaultNextTemplate\", \"\"], [\"defaultPreviousTemplate\", \"\"], [\"defaultFirstTemplate\", \"\"], [\"defaultLastTemplate\", \"\"], [1, \"pagination-first\", \"page-item\"], [\"href\", \"\", 1, \"page-link\", 3, \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"pagination-prev\", \"page-item\"], [1, \"pagination-page\", \"page-item\"], [1, \"pagination-next\", \"page-item\"], [1, \"pagination-last\", \"page-item\"]], template: function PaginationComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n        ɵngcc0.ɵɵtemplate(1, PaginationComponent_li_1_Template, 3, 7, \"li\", 1);\n        ɵngcc0.ɵɵtemplate(2, PaginationComponent_li_2_Template, 3, 7, \"li\", 2);\n        ɵngcc0.ɵɵtemplate(3, PaginationComponent_li_3_Template, 3, 10, \"li\", 3);\n        ɵngcc0.ɵɵtemplate(4, PaginationComponent_li_4_Template, 3, 7, \"li\", 4);\n        ɵngcc0.ɵɵtemplate(5, PaginationComponent_li_5_Template, 3, 7, \"li\", 5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, PaginationComponent_ng_template_6_Template, 1, 1, \"ng-template\", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(8, PaginationComponent_ng_template_8_Template, 1, 1, \"ng-template\", null, 7, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(10, PaginationComponent_ng_template_10_Template, 1, 1, \"ng-template\", null, 8, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(12, PaginationComponent_ng_template_12_Template, 1, 1, \"ng-template\", null, 9, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(14, PaginationComponent_ng_template_14_Template, 1, 1, \"ng-template\", null, 10, ɵngcc0.ɵɵtemplateRefExtractor);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.classMap);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.pages);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n    } }, dependencies: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet], encapsulation: 2 });\n/** @nocollapse */\nPaginationComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: PaginationConfig },\n    { type: ChangeDetectorRef }\n];\nPaginationComponent.propDecorators = {\n    align: [{ type: Input }],\n    maxSize: [{ type: Input }],\n    boundaryLinks: [{ type: Input }],\n    directionLinks: [{ type: Input }],\n    firstText: [{ type: Input }],\n    previousText: [{ type: Input }],\n    nextText: [{ type: Input }],\n    lastText: [{ type: Input }],\n    rotate: [{ type: Input }],\n    pageBtnClass: [{ type: Input }],\n    disabled: [{ type: Input }],\n    customPageTemplate: [{ type: Input }],\n    customNextTemplate: [{ type: Input }],\n    customPreviousTemplate: [{ type: Input }],\n    customFirstTemplate: [{ type: Input }],\n    customLastTemplate: [{ type: Input }],\n    numPages: [{ type: Output }],\n    pageChanged: [{ type: Output }],\n    itemsPerPage: [{ type: Input }],\n    totalItems: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PaginationComponent, [{\n        type: Component,\n        args: [{\n                selector: 'pagination',\n                template: \"<ul class=\\\"pagination\\\" [ngClass]=\\\"classMap\\\">\\n  <li class=\\\"pagination-first page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customFirstTemplate || defaultFirstTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-prev page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page - 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPreviousTemplate || defaultPreviousTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li *ngFor=\\\"let pg of pages\\\"\\n      [class.active]=\\\"pg.active\\\"\\n      [class.disabled]=\\\"disabled && !pg.active\\\"\\n      class=\\\"pagination-page page-item\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(pg.number, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPageTemplate || defaultPageTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: disabled, $implicit: pg, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-next page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page + 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customNextTemplate || defaultNextTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-last page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(totalPages, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customLastTemplate || defaultLastTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n</ul>\\n\\n<ng-template #defaultPageTemplate let-page>{{ page.text }}</ng-template>\\n\\n<ng-template #defaultNextTemplate>{{ getText('next') }}</ng-template>\\n\\n<ng-template #defaultPreviousTemplate>{{ getText('previous') }}</ng-template>\\n\\n<ng-template #defaultFirstTemplate>{{ getText('first') }}</ng-template>\\n\\n<ng-template #defaultLastTemplate>{{ getText('last') }}</ng-template>\\n\",\n                providers: [PAGINATION_CONTROL_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: PaginationConfig }, { type: ɵngcc0.ChangeDetectorRef }]; }, { numPages: [{\n            type: Output\n        }], pageChanged: [{\n            type: Output\n        }], itemsPerPage: [{\n            type: Input\n        }], totalItems: [{\n            type: Input\n        }], maxSize: [{\n            type: Input\n        }], rotate: [{\n            type: Input\n        }], boundaryLinks: [{\n            type: Input\n        }], directionLinks: [{\n            type: Input\n        }], pageBtnClass: [{\n            type: Input\n        }], align: [{\n            type: Input\n        }], firstText: [{\n            type: Input\n        }], previousText: [{\n            type: Input\n        }], nextText: [{\n            type: Input\n        }], lastText: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], customPageTemplate: [{\n            type: Input\n        }], customNextTemplate: [{\n            type: Input\n        }], customPreviousTemplate: [{\n            type: Input\n        }], customFirstTemplate: [{\n            type: Input\n        }], customLastTemplate: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    PaginationComponent.prototype.config;\n    /**\n     * if `true` aligns each link to the sides of pager\n     * @type {?}\n     */\n    PaginationComponent.prototype.align;\n    /**\n     * limit number for page links in pager\n     * @type {?}\n     */\n    PaginationComponent.prototype.maxSize;\n    /**\n     * if false first and last buttons will be hidden\n     * @type {?}\n     */\n    PaginationComponent.prototype.boundaryLinks;\n    /**\n     * if false previous and next buttons will be hidden\n     * @type {?}\n     */\n    PaginationComponent.prototype.directionLinks;\n    /**\n     * first button text\n     * @type {?}\n     */\n    PaginationComponent.prototype.firstText;\n    /**\n     * previous button text\n     * @type {?}\n     */\n    PaginationComponent.prototype.previousText;\n    /**\n     * next button text\n     * @type {?}\n     */\n    PaginationComponent.prototype.nextText;\n    /**\n     * last button text\n     * @type {?}\n     */\n    PaginationComponent.prototype.lastText;\n    /**\n     * if true current page will in the middle of pages list\n     * @type {?}\n     */\n    PaginationComponent.prototype.rotate;\n    /**\n     * add class to <code><li\\></code>\n     * @type {?}\n     */\n    PaginationComponent.prototype.pageBtnClass;\n    /**\n     * if true pagination component will be disabled\n     * @type {?}\n     */\n    PaginationComponent.prototype.disabled;\n    /**\n     * custom template for page link\n     * @type {?}\n     */\n    PaginationComponent.prototype.customPageTemplate;\n    /**\n     * custom template for next link\n     * @type {?}\n     */\n    PaginationComponent.prototype.customNextTemplate;\n    /**\n     * custom template for previous link\n     * @type {?}\n     */\n    PaginationComponent.prototype.customPreviousTemplate;\n    /**\n     * custom template for first link\n     * @type {?}\n     */\n    PaginationComponent.prototype.customFirstTemplate;\n    /**\n     * custom template for last link\n     * @type {?}\n     */\n    PaginationComponent.prototype.customLastTemplate;\n    /**\n     * fired when total pages count changes, $event:number equals to total pages count\n     * @type {?}\n     */\n    PaginationComponent.prototype.numPages;\n    /**\n     * fired when page was changed, $event:{page, itemsPerPage} equals to object\n     * with current page index and number of items per page\n     * @type {?}\n     */\n    PaginationComponent.prototype.pageChanged;\n    /** @type {?} */\n    PaginationComponent.prototype.onChange;\n    /** @type {?} */\n    PaginationComponent.prototype.onTouched;\n    /** @type {?} */\n    PaginationComponent.prototype.classMap;\n    /** @type {?} */\n    PaginationComponent.prototype.pages;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PaginationComponent.prototype._itemsPerPage;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PaginationComponent.prototype._totalItems;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PaginationComponent.prototype._totalPages;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PaginationComponent.prototype.inited;\n    /**\n     * @type {?}\n     * @protected\n     */\n    PaginationComponent.prototype._page;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaginationComponent.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    PaginationComponent.prototype.changeDetection;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PaginationModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return { ngModule: PaginationModule, providers: [] };\n    }\n}\nPaginationModule.ɵfac = function PaginationModule_Factory(t) { return new (t || PaginationModule)(); };\nPaginationModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: PaginationModule });\nPaginationModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PaginationModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [PagerComponent, PaginationComponent],\n                exports: [PagerComponent, PaginationComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PaginationModule, { declarations: function () { return [PagerComponent, PaginationComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [PagerComponent, PaginationComponent]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { PagerComponent, PaginationComponent, PaginationConfig, PaginationModule, PAGER_CONTROL_VALUE_ACCESSOR as ɵa, PAGINATION_CONTROL_VALUE_ACCESSOR as ɵb };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}