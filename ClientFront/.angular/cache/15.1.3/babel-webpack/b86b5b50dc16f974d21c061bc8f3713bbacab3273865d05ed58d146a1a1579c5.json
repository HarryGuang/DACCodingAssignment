{"ast":null,"code":"import { BehaviorSubject, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AccountService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:5001/api/';\n    this.currentUserSource = new BehaviorSubject(null);\n    this.currentUser$ = this.currentUserSource.asObservable();\n  }\n  login(model) {\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(map(response => {\n      const user = response;\n      if (user) {\n        this.setCurrentUser(user);\n      }\n    }));\n  }\n  setCurrentUser(user) {\n    user.roles = [];\n    const roles = this.getDecodedToken(user.token).role;\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n  getDecodedToken(token) {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n}\nAccountService.ɵfac = function AccountService_Factory(t) {\n  return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n};\nAccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccountService,\n  factory: AccountService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,EAAEC,GAAG,QAAQ,MAAM;;;AAM3C,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJxB,YAAO,GAAG,6BAA6B;IAC/B,sBAAiB,GAAG,IAAIJ,eAAe,CAAc,IAAI,CAAC;IAClE,iBAAY,GAAG,IAAI,CAACK,iBAAiB,CAACC,YAAY,EAAE;EAEb;EAEvCC,KAAK,CAACC,KAAU;IACd,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAO,IAAI,CAACC,OAAO,GAAG,eAAe,EAAEF,KAAK,CAAC,CAACG,IAAI,CACrEV,GAAG,CAAEW,QAAc,IAAI;MACrB,MAAMC,IAAI,GAAGD,QAAQ;MACrB,IAAIC,IAAI,EAAE;QACR,IAAI,CAACC,cAAc,CAACD,IAAI,CAAC;;IAE7B,CAAC,CAAC,CACH;EACH;EAEAC,cAAc,CAACD,IAAU;IACvBA,IAAI,CAACE,KAAK,GAAG,EAAE;IACf,MAAMA,KAAK,GAAG,IAAI,CAACC,eAAe,CAACH,IAAI,CAACI,KAAK,CAAC,CAACC,IAAI;IACnDC,KAAK,CAACC,OAAO,CAACL,KAAK,CAAC,GAAIF,IAAI,CAACE,KAAK,GAAGA,KAAK,GAAIF,IAAI,CAACE,KAAK,CAACM,IAAI,CAACN,KAAK,CAAC;IACpEO,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI,CAAC,CAAC;IAClD,IAAI,CAACR,iBAAiB,CAACqB,IAAI,CAACb,IAAI,CAAC;EACnC;EAEAG,eAAe,CAACC,KAAa;IAC3B,OAAOO,IAAI,CAACG,KAAK,CAACC,IAAI,CAACX,KAAK,CAACY,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9C;;AA5BW3B,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAA4B,SAAd5B,cAAc;EAAA6B,YAFb;AAAM","names":["BehaviorSubject","map","AccountService","constructor","http","currentUserSource","asObservable","login","model","post","baseUrl","pipe","response","user","setCurrentUser","roles","getDecodedToken","token","role","Array","isArray","push","localStorage","setItem","JSON","stringify","next","parse","atob","split","factory","providedIn"],"sourceRoot":"","sources":["D:\\Harry\\NetCore\\DACCodingAssignment\\DACCodingAssignment\\clientfront\\src\\app\\_services\\account.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'; \nimport { BehaviorSubject, map } from 'rxjs';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  baseUrl = 'https://localhost:5001/api/';\n  private currentUserSource = new BehaviorSubject<User | null>(null);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(private http: HttpClient) {}\n\n  login(model: any) {\n    return this.http.post<User>(this.baseUrl + 'account/login', model).pipe(\n      map((response: User) => {\n        const user = response;\n        if (user) {\n          this.setCurrentUser(user);\n        }\n      })\n    );\n  }\n\n  setCurrentUser(user: User) {\n    user.roles = [];\n    const roles = this.getDecodedToken(user.token).role;\n    Array.isArray(roles) ? (user.roles = roles) : user.roles.push(roles);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n\n  getDecodedToken(token: string) {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}