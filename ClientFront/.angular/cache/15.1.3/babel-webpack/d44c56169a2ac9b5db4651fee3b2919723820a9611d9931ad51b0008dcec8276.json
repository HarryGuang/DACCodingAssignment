{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { take } from 'rxjs';\nlet MemberListComponent = class MemberListComponent {\n  constructor(accountService, membersService, toastr, modalService) {\n    this.accountService = accountService;\n    this.membersService = membersService;\n    this.toastr = toastr;\n    this.modalService = modalService;\n    this.members = [];\n    this.genderList = [{\n      value: 'male',\n      display: 'Males'\n    }, {\n      value: 'female',\n      display: 'Females'\n    }];\n    this.user = {};\n    this.canEdit = false;\n    this.canDelete = false;\n    this.userParams = this.membersService.getUserParams();\n    //console.log(this.userParams);\n    this.accountService.currentUser$.pipe(take(1)).subscribe({\n      next: user => {\n        if (user) this.user = user;\n      }\n    });\n  }\n  ngOnInit() {\n    this.loadMembers();\n    if (this.user != null) {\n      var appHasRole = \"['Admin', 'Moderator']\";\n      if (this.user.roles.some(r => appHasRole.includes(r))) {\n        this.canEdit = true;\n        this.canDelete = true;\n      }\n    }\n  }\n  loadMembers() {\n    //console.log(this.userParams);\n    if (this.userParams) {\n      this.membersService.setUserParams(this.userParams);\n      this.membersService.getMembers(this.userParams).subscribe({\n        next: Response => {\n          if (Response.result && Response.pagination) {\n            this.members = Response.result;\n            this.pagination = Response.pagination;\n          }\n        }\n      });\n    }\n  }\n  resetFilters() {\n    this.userParams = this.membersService.resetUserParams();\n    this.loadMembers();\n  }\n  pageChanged(event) {\n    if (this.userParams && this.userParams?.pageNumber !== event.page) {\n      this.userParams.pageNumber = event.page;\n      this.membersService.setUserParams(this.userParams);\n      this.loadMembers();\n    }\n  }\n  deleteUser(id) {\n    if (confirm('Are you sure to delete this user?')) {\n      this.membersService.deleteMember(id).subscribe({\n        complete: () => {\n          this.toastr.success('User deleted.');\n          this.membersService.memberCache = new Map();\n          this.loadMembers();\n          if (this.user != null) {\n            var appHasRole = \"['Admin', 'Moderator']\";\n            if (this.user.roles.some(r => appHasRole.includes(r))) {\n              this.canEdit = true;\n              this.canDelete = true;\n            }\n          }\n        },\n        error: error => {\n          this.toastr.error(error.error, error.status.toString());\n        }\n      });\n    }\n  }\n};\nMemberListComponent = __decorate([Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})], MemberListComponent);\nexport { MemberListComponent };","map":{"version":3,"mappings":"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","names":["Component","take","MemberListComponent","constructor","accountService","membersService","toastr","modalService","value","display","userParams","getUserParams","currentUser$","pipe","subscribe","next","user","ngOnInit","loadMembers","appHasRole","roles","some","r","includes","canEdit","canDelete","setUserParams","getMembers","Response","result","pagination","members","resetFilters","resetUserParams","pageChanged","event","pageNumber","page","deleteUser","id","confirm","deleteMember","complete","success","memberCache","Map","error","status","toString","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Harry\\NetCore\\DACCodingAssignment\\DACCodingAssignment\\clientfront\\src\\app\\members\\member-list\\member-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Member } from 'src/app/_models/member';\nimport { Pagination } from 'src/app/_models/pagination';\nimport { UserParams } from 'src/app/_models/userParams';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { take } from 'rxjs';\nimport { User } from '../../_models/user';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css'],\n})\nexport class MemberListComponent implements OnInit {\n  members: Member[] = [];\n  pagination: Pagination | undefined;\n  userParams: UserParams | undefined;\n  genderList = [\n    { value: 'male', display: 'Males' },\n    { value: 'female', display: 'Females' },\n  ];\n  user: User = {} as User;\n  canEdit = false;\n  canDelete = false;\n\n  constructor(\n    private accountService: AccountService,\n    private membersService: MembersService,\n    private toastr: ToastrService,\n    , private modalService: BsModalService\n  ) {\n    this.userParams = this.membersService.getUserParams();\n    //console.log(this.userParams);\n    this.accountService.currentUser$.pipe(take(1)).subscribe({\n      next: (user) => {\n        if (user) this.user = user;\n      },\n    });\n  }\n\n  ngOnInit(): void {\n    this.loadMembers();\n    if (this.user != null) {\n      var appHasRole = \"['Admin', 'Moderator']\";\n      if (this.user.roles.some((r) => appHasRole.includes(r))) {\n        this.canEdit = true;\n        this.canDelete = true;\n      }\n    }\n  }\n\n  loadMembers() {\n    //console.log(this.userParams);\n    if (this.userParams) {\n      this.membersService.setUserParams(this.userParams);\n      this.membersService.getMembers(this.userParams).subscribe({\n        next: (Response) => {\n          if (Response.result && Response.pagination) {\n            this.members = Response.result;\n            this.pagination = Response.pagination;\n          }\n        },\n      });\n    }\n  }\n\n  resetFilters() {\n    this.userParams = this.membersService.resetUserParams();\n    this.loadMembers();\n  }\n\n  pageChanged(event: any) {\n    if (this.userParams && this.userParams?.pageNumber !== event.page) {\n      this.userParams.pageNumber = event.page;\n      this.membersService.setUserParams(this.userParams);\n      this.loadMembers();\n    }\n  }\n\n  deleteUser(id: number) {\n    if (confirm('Are you sure to delete this user?')) {\n      this.membersService.deleteMember(id).subscribe({\n        complete: () => {\n          this.toastr.success('User deleted.');\n\n          this.membersService.memberCache = new Map();\n          this.loadMembers();\n\n          if (this.user != null) {\n            var appHasRole = \"['Admin', 'Moderator']\";\n            if (this.user.roles.some((r) => appHasRole.includes(r))) {\n              this.canEdit = true;\n              this.canDelete = true;\n            }\n          }\n        },\n        error: (error) => {\n          this.toastr.error(error.error, error.status.toString());\n        },\n      });\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}