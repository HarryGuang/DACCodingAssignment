{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(accountService) {\n    this.accountService = accountService;\n    this.title = 'ClientFront';\n  }\n  ngOnInit() {\n    this.setCurrentUser();\n  }\n  getUsers() {}\n  setCurrentUser() {\n    const userString = localStorage.getItem('user');\n    if (!userString) return;\n    const user = JSON.parse(userString);\n    this.accountService.setCurrentUser(user);\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAO1C,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAGvBC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAFlC,UAAK,GAAG,aAAa;EAEgC;EAErDC,QAAQ;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAC,QAAQ,IAAI;EAEZD,cAAc;IACZ,MAAME,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAI,CAACF,UAAU,EAAE;IACjB,MAAMG,IAAI,GAASC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;IACzC,IAAI,CAACJ,cAAc,CAACE,cAAc,CAACK,IAAI,CAAC;EAC1C;CACD;AAjBYT,YAAY,eALxBD,SAAS,CAAC;EACTa,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,GACWd,YAAY,CAiBxB;SAjBYA,YAAY","names":["Component","AppComponent","constructor","accountService","ngOnInit","setCurrentUser","getUsers","userString","localStorage","getItem","user","JSON","parse","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Harry\\NetCore\\DACCodingAssignment\\DACCodingAssignment\\clientfront\\src\\app\\app.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http'; \nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'ClientFront';\n\n  constructor(private accountService: AccountService) {}\n\n  ngOnInit(): void {\n    this.setCurrentUser();\n  }\n\n  getUsers() {}\n\n  setCurrentUser() {\n    const userString = localStorage.getItem('user');\n    if (!userString) return;\n    const user: User = JSON.parse(userString);\n    this.accountService.setCurrentUser(user);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}